{"version":3,"file":"_r.min.js","sources":["../src/is.ts","../src/global.ts","../src/activateCamera.ts","../src/data.ts","../src/events.ts","../src/meshTriggers.ts","../src/Selector.ts","../src/Elements.ts","../src/library.ts","../src/import.ts","../src/select.ts","../src/patch/patch.ts","../node_modules/q/q.js","../src/launch.ts","../src/index.ts"],"sourcesContent":["import { BABYLON } from \"./BABYLON.js\";\r\n\r\nexport module is {\r\n  export function Function(functionToCheck): boolean {\r\n    var getType = {};\r\n    return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\r\n  }\r\n\r\n  export function Number(n): boolean {\r\n    return !isNaN(parseFloat(n)) && isFinite(n);\r\n  }\r\n\r\n  export function PlainObject(n): boolean {\r\n    // Basic check for Type object that's not null\r\n    if (typeof n == 'object' && n !== null) {\r\n      // If Object.getPrototypeOf supported, use it\r\n      if (typeof Object.getPrototypeOf == 'function') {\r\n        var proto = Object.getPrototypeOf(n);\r\n        return proto === Object.prototype || proto === null;\r\n      }\r\n      // Otherwise, use internal class\r\n      // This should be reliable as if getPrototypeOf not supported, is pre-ES5\r\n      return Object.prototype.toString.call(n) == '[object Object]';\r\n    }\r\n    // Not an object\r\n    return false;\r\n  }\r\n\r\n  export function AssetContainer(x: any) {\r\n    return x instanceof BABYLON.AssetContainer;\r\n  }\r\n\r\n  export function Scene(x: any) {\r\n    return x instanceof BABYLON.Scene;\r\n  }\r\n\r\n  export function Array(x: any): boolean {\r\n    return window['Array'].isArray(x);\r\n  }\r\n\r\n  export function Mesh(x: any): boolean {\r\n    return x instanceof BABYLON.AbstractMesh;\r\n  }\r\n\r\n  export function Material(x: any): boolean {\r\n    return x instanceof BABYLON.Material;\r\n  }\r\n\r\n  export function MultiMaterial(x: any): boolean {\r\n    return x instanceof BABYLON.MultiMaterial;\r\n  }\r\n\r\n  export function Texture(x: any): boolean {\r\n    return x instanceof BABYLON.Texture;\r\n  }\r\n\r\n  export function Light(x: any): boolean {\r\n    return x instanceof BABYLON.Light;\r\n  }\r\n\r\n  export function Camera(x: any): boolean {\r\n    return x instanceof BABYLON.Camera;\r\n  }\r\n\r\n  export function Vector3(x: any): boolean {\r\n    return x instanceof BABYLON.Vector3 || (is.Array(x) && x.length == 3);\r\n  }\r\n\r\n  export function Vector2(x: any): boolean {\r\n    return x instanceof BABYLON.Vector2;\r\n  }\r\n\r\n  export function Color(x: any): boolean {\r\n    //TODO\r\n    //return HexColor(x) || x instanceof BABYLON.Color3 || x instanceof BABYLON.Color4 || _r.colorNames[x] != null || (is.String(x) && (x.trim().indexOf('rgb(') == 0 ||  x.trim().indexOf('rgba(') == 0));\r\n    return HexColor(x) || x instanceof BABYLON.Color3 || x instanceof BABYLON.Color4 || (is.String(x) && (x.trim().indexOf('rgb(') == 0 || x.trim().indexOf('rgba(') == 0));\r\n  }\r\n\r\n  export function HexColor(x: any): boolean {\r\n    return String(x) && x[0] == '#';\r\n  }\r\n\r\n  export function Float(n: any): boolean {\r\n    return Number(n) === n && n % 1 !== 0;\r\n  }\r\n\r\n  export function Int(n: any): boolean {\r\n    return Number(n) === n && n % 1 === 0;\r\n  }\r\n\r\n  export function Quaternion(n: any): boolean {\r\n    return n instanceof BABYLON.Quaternion;\r\n  }\r\n\r\n  export function Matrix(n: any): boolean {\r\n    return n instanceof BABYLON.Matrix;\r\n  }\r\n\r\n  export function String(x: any): boolean {\r\n    return typeof x === \"string\";\r\n  }\r\n\r\n  export function PatchFile(expr: string) {\r\n    if (typeof expr !== 'string') {\r\n      return false;\r\n    }\r\n    var split = expr.split('.');\r\n    var extension = split[split.length - 1].trim();\r\n    return extension == 'runtime' || extension == 'patch' || extension == 'js';\r\n  }\r\n\r\n  export function Boolean(expr: any): boolean {\r\n    return typeof expr == 'boolean';\r\n  }\r\n\r\n  /**\r\n   * Camera || Light || Material || Mesh || Texture ||\r\n   * @param x\r\n   * @constructor\r\n   */\r\n  export function BabylonNode(x: any) {\r\n    return is.Camera(x) || is.Light(x) || is.Material(x) || is.Mesh(x) || is.Texture(x);\r\n  }\r\n\r\n  /**\r\n   * Check is a javascript Object is a DOM Object\r\n   * @param expr\r\n   * @constructor\r\n   */\r\n  export function DOM(expr: any): boolean {\r\n    // from https://stackoverflow.com/questions/384286/javascript-isdom-how-do-you-check-if-a-javascript-object-is-a-dom-object\r\n    return (\r\n      typeof HTMLElement === \"object\" ? expr instanceof HTMLElement : //DOM2\r\n        expr && typeof expr === \"object\" && expr !== null && expr.nodeType === 1 && typeof expr.nodeName === \"string\"\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Test for any Primitive\r\n   * @param x\r\n   * @returns {boolean}\r\n   * @constructor\r\n   */\r\n  export function Primitive(x: any) {\r\n    return x !== Object(x);\r\n  }\r\n\r\n  export function Promise(x: any) {\r\n    return x && typeof x[\"then\"] == 'function';\r\n  }\r\n}\r\n","import { is } from \"./is.js\";\r\nimport { BABYLON } from \"./BABYLON.js\";\r\nimport { applyPatch } from \"./patch/patch\";\r\n\r\nlet _scene, _engine, _canvas;\r\n\r\nexport class global {\r\n  static get canvas() {\r\n    if (!_canvas) {\r\n      if (BABYLON.Engine.LastCreatedEngine) {\r\n        let canvas = BABYLON.Engine.LastCreatedEngine.getRenderingCanvas();\r\n        if (canvas) {\r\n          _canvas = canvas;\r\n          return _canvas;\r\n        }\r\n      }\r\n      _canvas = document.createElement('canvas');\r\n      _canvas.setAttribute('touch-action', 'none');\r\n      _canvas.style.width = \"100%\";\r\n      _canvas.style.height = \"100%;\";\r\n      document.body.appendChild(_canvas);\r\n    }\r\n    return _canvas;\r\n  }\r\n\r\n  static set canvas(value) {\r\n    if (is.String(value)) {\r\n      _canvas = document.getElementById(value);\r\n    }\r\n    else {\r\n      _canvas = value;\r\n    }\r\n  }\r\n\r\n  static get engine() {\r\n    if (!_engine) {\r\n      if (BABYLON.Engine.LastCreatedEngine) {\r\n        _engine = BABYLON.Engine.LastCreatedEngine;\r\n      }\r\n      else {\r\n        _engine = new BABYLON.Engine(global.canvas, true);\r\n      }\r\n\r\n    }\r\n    return _engine;\r\n  }\r\n\r\n  static set engine(value) {\r\n    _engine = value;\r\n    // the canvas/window resize event handler\r\n    window.addEventListener('resize', function() {\r\n      _engine.resize();\r\n    });\r\n  }\r\n\r\n  static get scene() {\r\n    if (!_scene) {\r\n      if (BABYLON.Engine.LastCreatedScene) {\r\n        _scene = BABYLON.Engine.LastCreatedScene;\r\n      }\r\n      else {\r\n        _scene = new BABYLON.Scene(global.engine);\r\n      }\r\n    }\r\n    return _scene;\r\n  }\r\n\r\n  static set scene(value) {\r\n    _scene = value;\r\n  }\r\n\r\n  static TRACE = false;\r\n\r\n  /**\r\n   static patch(_patch : any[]) {\r\n        let _this = this;\r\n        let promises = [];\r\n        _patch.forEach(function(item) {\r\n            let selector = Object.getOwnPropertyNames(item)[0];\r\n            _this.select(selector).each(function(element) {\r\n                promises.push(applyPatch(element, item[selector]));\r\n            });\r\n        });\r\n        return promises.reduce(Q.when, Q());\r\n    }**/\r\n}","import { global } from './global.js';\r\n\r\nexport function activateCamera(camera : string) {\r\n    if (global.scene.activeCamera) {\r\n        global.scene.activeCamera.detachControl();\r\n    }\r\n\r\n    global.scene.setActiveCameraByName(camera);\r\n    global.scene.activeCamera.attachControl(global.canvas);\r\n\r\n    if (global.TRACE) {\r\n        console.groupCollapsed(\"[_r] - activate camera \" + global.scene.activeCamera.name);\r\n        console.log(global.scene.activeCamera);\r\n        console.groupEnd();\r\n    }\r\n}","import { is } from \"./is.js\";\r\n\r\nlet cache = [];\r\nlet expando = '_r' + Date.now();\r\n\r\n/**\r\n * Attach any data to any js object (inspired by {@link https://api.jquery.com/data/ |jQuery.data()}).\r\n * @param element\r\n * @param key\r\n * @param value\r\n */\r\nexport function data(element : any, key?: string, value?: any) {\r\n    if (!element.hasOwnProperty(expando)) {\r\n        element[expando] = cache.length;\r\n        cache[element[expando]] = {};\r\n    }\r\n    if (key != null) {\r\n        if (value != null) {\r\n            cache[element[expando]][key] = value;\r\n        }\r\n        else {\r\n            return cache[element[expando]][key];\r\n        }\r\n    }\r\n    else {\r\n        return cache[element[expando]];\r\n    }\r\n}","import { data } from \"./data.js\";\r\nimport { is } from \"./is.js\";\r\n\r\nexport function on(element: any, event: string, handler: (...args: any[]) => void, repeat = true) {\r\n  if (!data(element, '_r.events')) {\r\n    data(element, '_r.events', {});\r\n  }\r\n  let events = data(element, '_r.events');\r\n  if (!events[event]) {\r\n    events[event] = [];\r\n  }\r\n  events[event].push({\r\n    handler: handler,\r\n    repeat: repeat\r\n  });\r\n}\r\n\r\nexport function one(element: any, event: string, handler: (...args: any[]) => void) {\r\n  on(element, event, handler, false);\r\n}\r\n\r\nexport function trigger(element: any, event: string, extraParameters?: any) {\r\n  let events = data(element, '_r.events');\r\n  if (!events) {\r\n    return;\r\n  }\r\n  let handlers = events[event];\r\n  if (is.Array(handlers)) {\r\n    handlers.forEach(function(callback) {\r\n      try {\r\n        callback.handler.call(element, extraParameters);\r\n        if (!callback.repeat) {\r\n          off(element, event, callback.handler);\r\n        }\r\n      }\r\n      catch (ex) {\r\n        console.error(\"_r.trigger exception\", ex);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function off(element: any, event: string, handler?: (...args: any[]) => void) {\r\n  let events = data(element, '_r.events');\r\n  if (events[event]) {\r\n    if (handler) {\r\n      events[event] = events[event].filter(function(_handler) {\r\n        if (_handler.handler.toString() == handler.toString()) {\r\n          events[event].splice(events[event].indexOf(_handler), 1);\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      events[event] = [];\r\n    }\r\n  }\r\n}","import { BABYLON } from \"./BABYLON.js\";\r\nimport { global } from \"./global.js\";\r\nimport { data } from \"./data.js\";\r\nimport { trigger } from \"./events.js\";\r\n\r\nexport const meshTriggers = [\r\n  'NothingTrigger ',\r\n  'OnDoublePickTrigger',\r\n  'OnPickTrigger',\r\n  'OnLeftPickTrigger',\r\n  'OnRightPickTrigger',\r\n  'OnCenterPickTrigger',\r\n  'OnPickDownTrigger',\r\n  'OnPickUpTrigger',\r\n  'OnPickOutTrigger',\r\n  'OnLongPressTrigger',\r\n  'OnPointerOverTrigger',\r\n  'OnPointerOutTrigger',\r\n  'OnEveryFrameTrigger',\r\n  'OnIntersectionEnterTrigger',\r\n  'OnIntersectionExitTrigger',\r\n  'OnKeyDownTrigger',\r\n  'OnKeyUpTrigger'\r\n];\r\n\r\nexport function onMesh(mesh: BABYLON.Mesh, event: string, handler: (args: any) => void, repeat = true) {\r\n  if (!mesh.actionManager) {\r\n    mesh.actionManager = new BABYLON.ActionManager(global.scene);\r\n  }\r\n  let action = new BABYLON.ExecuteCodeAction(BABYLON.ActionManager[event], function(evt) {\r\n    trigger(mesh, event, evt);\r\n  });\r\n\r\n  mesh.actionManager.registerAction(action);\r\n\r\n  let events = data(mesh, \"_r.events\");\r\n  if (!events) {\r\n    data(mesh, \"_r.events\", []);\r\n    events = data(mesh, \"_r.events\");\r\n  }\r\n  if (!events[event]) {\r\n    events[event] = [];\r\n  }\r\n  events[event].push({\r\n    handler: handler,\r\n    repeat: repeat,\r\n    action: action\r\n  });\r\n}\r\n\r\nexport function oneMesh(mesh: BABYLON.Mesh, event: string, handler: (args: any) => void) {\r\n  onMesh(mesh, event, handler, false);\r\n}\r\n\r\nexport function offMesh(mesh: BABYLON.Mesh, event: string, handler?: (args: any) => void) {\r\n  let events = data(mesh, '_r.events');\r\n  if (events[event]) {\r\n    if (handler) {\r\n      events[event] = events[event].filter(function(_event) {\r\n        if (_event.handler.toString() == handler.toString()) {\r\n          if (_event.action) {\r\n            let index = mesh.actionManager.actions.indexOf(_event.action);\r\n            mesh.actionManager.actions.splice(index, 1);\r\n          }\r\n          if (_event.listener) {\r\n            mesh.removeEventListener(_event, _event.listener);\r\n          }\r\n        }\r\n        return _event.handler.toString() !== handler.toString();\r\n      });\r\n    }\r\n    else {\r\n      events[event] = [];\r\n    }\r\n  }\r\n}","import { is } from \"./is.js\";\r\n\r\nexport class Selector {\r\n  type = \"all\";\r\n  filters: Array<any>;\r\n\r\n  constructor(selector: string) {\r\n    let filters = [];\r\n    let type = \"all\";\r\n    selector.split(',').forEach(function(item) {\r\n      item = item.trim();\r\n      if (item.indexOf(\":mesh\") !== -1) {\r\n        type = \"mesh\";\r\n      }\r\n      if (item.indexOf(\":material\") !== -1) {\r\n        type = \"material\";\r\n      }\r\n      if (item.indexOf(\":light\") !== -1) {\r\n        type = \"light\";\r\n      }\r\n      if (item.indexOf(\":camera\") !== -1) {\r\n        type = \"camera\";\r\n      }\r\n      if (item.indexOf(\":texture\") !== -1) {\r\n        type = \"texture\";\r\n      }\r\n      if (item.indexOf(\":multimaterial\") !== -1) {\r\n        type = \"multimaterial\";\r\n      }\r\n      [\":mesh\", \":material\", \":multimaterial\", \":camera\", \":light\", \":texture\"].forEach(function(type) {\r\n        item = item.replace(type, '');\r\n      });\r\n\r\n      // [isVisible][alpha!= 0.1]\r\n      let regExpAttribute = /\\[(.*?)\\]/;\r\n      let matches = [];\r\n      let match;\r\n      while (match = regExpAttribute.exec(selector)) {\r\n        matches.push(match[1]);\r\n      }\r\n      // TODO [material.diffuseTexture.name=texture*.jpg]\r\n      matches.forEach(function(expr) {\r\n        if (expr.indexOf('!=') !== -1) {\r\n          var split = expr.split('!=');\r\n          filters.push(function(element) {\r\n            if (element.hasOwnProperty(split[0])) {\r\n              return element[split[0]] != split[1];\r\n            }\r\n            return false;\r\n          });\r\n        }\r\n        else {\r\n          if (expr.indexOf('=') !== -1) {\r\n            filters.push(function(element) {\r\n              if (element.hasOwnProperty(split[0])) {\r\n                return element[split[0]] == split[1];\r\n              }\r\n              return false;\r\n            });\r\n          }\r\n          else {\r\n            filters.push(function(element) {\r\n              return element.hasOwnProperty(expr);\r\n            });\r\n          }\r\n        }\r\n      });\r\n      item = item.replace(regExpAttribute, '');\r\n      // Here item only contains name selector i.e mesh.00*\r\n      let exp = item.replace(/\\*/g, '.*');\r\n      let regExp = new RegExp('^' + exp + '$');\r\n      filters.push(function(element) {\r\n        return element.hasOwnProperty('name') && regExp.test(element.name);\r\n      });\r\n    });\r\n    // TODO :not(selector)\r\n    this.filters = filters;\r\n    this.type = type;\r\n  }\r\n\r\n  matchFilters(element) {\r\n    for (let i = 0; i < this.filters.length; i++) {\r\n      if (!this.filters[i](element)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  matchType(element) {\r\n    if (this.type == \"all\") {\r\n      return true;\r\n    }\r\n    if (this.type == \"mesh\") {\r\n      return is.Mesh(element);\r\n    }\r\n    if (this.type == \"light\") {\r\n      return is.Light(element);\r\n    }\r\n    if (this.type == \"material\") {\r\n      return is.Material(element);\r\n    }\r\n    if (this.type == \"multimaterial\") {\r\n      return is.MultiMaterial(element);\r\n    }\r\n    if (this.type == \"texture\") {\r\n      return is.Texture(element);\r\n    }\r\n    if (this.type == \"camera\") {\r\n      return is.Camera(element);\r\n    }\r\n  }\r\n}","import { BABYLON } from \"./BABYLON.js\";\r\nimport { global } from \"./global.js\";\r\nimport { is } from \"./is.js\";\r\nimport { on, one, off, trigger } from \"./events.js\";\r\nimport { data } from \"./data.js\";\r\nimport { onMesh, oneMesh, offMesh, meshTriggers } from \"./meshTriggers.js\";\r\nimport { Selector } from \"./Selector.js\";\r\n\r\nexport class Elements {\r\n    length : number;\r\n    constructor(...elements : any) {\r\n        this.length = 0;\r\n        for (let i = 0; i < elements.length; i++) {\r\n            this.add(elements[i]);\r\n        }\r\n    }\r\n\r\n    add(element : any) {\r\n        if (is.Array(element)) {\r\n            for (let i = 0; i < element.length; i++) {\r\n                this.add(element[i]);\r\n            }\r\n            return;\r\n        }\r\n        if (is.AssetContainer(element) || is.Scene(element)) {\r\n            for (let i = 0; i < element.meshes.length; i++) {\r\n                this[this.length++] = element.meshes[i];\r\n            }\r\n            for (let i = 0; i < element.lights.length; i++) {\r\n                this[this.length++] = element.lights[i];\r\n            }\r\n            for (let i = 0; i < element.materials.length; i++) {\r\n                this[this.length++] = element.materials[i];\r\n            }\r\n            for (let i = 0; i < element.textures.length; i++) {\r\n                this[this.length++] = element.textures[i];\r\n            }\r\n            for (let i = 0; i < element.cameras.length; i++) {\r\n                this[this.length++] = element.cameras[i];\r\n            }\r\n            return;\r\n        }\r\n        this[this.length++] = element;\r\n    }\r\n\r\n    contains(element : any) {\r\n        return this.toArray().indexOf(element) !== -1;\r\n    }\r\n\r\n    /**\r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param events One or more space-separated event types\r\n     * @param handler A handler function previously attached for the event(s)\r\n     * @returns {Elements}\r\n     */\r\n    on(events : string, handler : (args : any) => void) {\r\n        this.each(function(item) {\r\n            if (is.Mesh(item) && meshTriggers.indexOf(events) !== -1) {\r\n                onMesh(item, events, handler);\r\n            }\r\n            else {\r\n                on(item, events, handler);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Attach a handler to an event for the elements. The handler is executed at most once per element per event type.\r\n     * @param events One or more space-separated event types\r\n     * @param handler A handler function previously attached for the event(s)\r\n     * @returns {Elements}\r\n     */\r\n    one(events : string, handler : (args : any) => void) {\r\n        this.each(function(item) {\r\n            if (is.Mesh(item) && meshTriggers.indexOf(events) !== -1) {\r\n                oneMesh(item, events, handler);\r\n            }\r\n            else {\r\n                one(item, events, handler);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Remove an event handler that were attached with .on()\r\n     * @param events\r\n     * @param handler A handler function previously attached for the event(s) or null to remove all handler attached for the event(s)\r\n     * @returns {Elements}\r\n     */\r\n    off(events : string, handler? : (args : any) => void) {\r\n        this.each(function(item) {\r\n            if (is.Mesh(item) && meshTriggers.indexOf(events) !== -1) {\r\n                offMesh(item, events, handler);\r\n            }\r\n            else {\r\n                off(item, events, handler);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute all handlers and behaviors attached to the matched elements for the given event type.\r\n     * @param events One or more space-separated event types\r\n     * @param extraParameters Additional parameters to pass along to the event handler.\r\n     * @returns {Elements}\r\n     */\r\n    trigger(events : string, extraParameters? : any) {\r\n        this.each(function(item) {\r\n            trigger(item, events, extraParameters);\r\n        });\r\n    }\r\n\r\n    data(key? : string, value? : any) {\r\n        if (key != null && value != null) {\r\n            for (let i = 0; i < this.length; i++) {\r\n                data(this[i], key, value);\r\n            }\r\n        }\r\n        else {\r\n            return data(this[0], key, value);\r\n        }\r\n    }\r\n\r\n    show() {\r\n        for (let i = 0; i < this.length; i++) {\r\n            if (is.Mesh(this[i])) {\r\n                global.scene.addMesh(this[i]);\r\n                continue;\r\n            }\r\n            if (is.Material(this[i])) {\r\n                global.scene.addMaterial(this[i]);\r\n                continue;\r\n            }\r\n            if (is.Light(this[i])) {\r\n                global.scene.addMaterial(this[i]);\r\n                continue;\r\n            }\r\n            if (is.Texture(this[i])) {\r\n                global.scene.addTexture(this[i]);\r\n                continue;\r\n            }\r\n            if (is.Camera(this[i])) {\r\n                global.scene.addCamera(this[i]);\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        for (let i = 0; i < this.length; i++) {\r\n            if (is.Mesh(this[i])) {\r\n                global.scene.removeMesh(this[i]);\r\n                continue;\r\n            }\r\n            if (is.Material(this[i])) {\r\n                global.scene.removeMaterial(this[i]);\r\n                continue;\r\n            }\r\n            if (is.Light(this[i])) {\r\n                global.scene.removeMaterial(this[i]);\r\n                continue;\r\n            }\r\n            if (is.Texture(this[i])) {\r\n                global.scene.removeTexture(this[i]);\r\n                continue;\r\n            }\r\n            if (is.Camera(this[i])) {\r\n                global.scene.removeCamera(this[i]);\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Iterate over elements and executing a function for each element.\r\n     * @param callback A function to execute for each element.\r\n     * @returns {_r.Elements}\r\n     */\r\n    each(callback: Function) : Elements {\r\n        for (let i = 0; i < this.length; i++) {\r\n            /** We can break the .each() loop at a particular iteration by making the callback function return false. Returning non-false is the same as a continue statement in a for loop; it will skip immediately to the next iteration. **/\r\n            if (callback.call(this[i], this[i], i) == false) {\r\n                return;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Pass each element in the current matched set through a function, producing a new jQuery object containing the return values.\r\n     * @param func A function object that will be invoked for each element in the current set.\r\n     * @returns {_r.Elements}\r\n     */\r\n    map(func : (obj : any) => any) : Elements {\r\n        let result = new Elements();\r\n        let length = 0;\r\n        this.each(function(element) {\r\n            result[length++] = func(element);\r\n        });\r\n        result.length = length;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Reduce the set of matched elements to those that match the selector or pass the function’s test.\r\n     * @param func A function used as a test for each element in the set. this is the current element.\r\n     * @returns {_r.Elements}\r\n     */\r\n    filter(func : (obj : any) => boolean) : Elements {\r\n        let result = new Elements();\r\n        this.each(function(element) {\r\n            if (func(element)) {\r\n                result.add(element);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Retrieve all the elements contained in the set, as an array.\r\n     * @returns {Array}\r\n     */\r\n    toArray() {\r\n        let result = [];\r\n        for (let i = 0; i < this.length; i++) {\r\n            result.push(this[i]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Get the value of an attribute for the first element in the set of matched elements or set one or more attributes for every matched element.\r\n     * @param attribute The name of the attribute to get.\r\n     * @param value Optional value to set for the attribute.\r\n     * @returns {any}\r\n     */\r\n    attr(attribute : string, value? : any) {\r\n        if (value != null) {\r\n            this.each(function(item) {\r\n                item[attribute] = value;\r\n            });\r\n            return this;\r\n        }\r\n        else {\r\n            return this[0][attribute];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reduce the set of matched elements to the first in the set.\r\n     * @returns {any}\r\n     */\r\n    first() : any {\r\n        return this[0];\r\n    }\r\n\r\n    /**\r\n     * @param property\r\n     * @returns {_r.Elements}\r\n     */\r\n    log(property?: string) {\r\n        this.each(function(item) {\r\n            if (property) {\r\n                console.log(item[property]);\r\n            }\r\n            else {\r\n                console.log(item);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Insert elements in the set\r\n     * @param elements\r\n     * @returns {_r.Elements}\r\n     */\r\n    concat(...elements : any[]) : Elements {\r\n        elements.forEach((element) => {\r\n            let base;\r\n            if (element instanceof Elements) {\r\n                base = element;\r\n            }\r\n            else {\r\n                if (is.String(element)) {\r\n                    base = new Elements(element);\r\n                }\r\n                else {\r\n                    if (is.Array(element)) {\r\n                        base = new Elements();\r\n                        element.forEach(function(item) {\r\n                            base[base.length++] = item;\r\n                        });\r\n                    }\r\n                    else {\r\n                        base = new Elements(element);\r\n                    }\r\n                }\r\n            }\r\n            base.each(function(item) {\r\n                this[this.length++] = item;\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    select(selector : string) {\r\n        return find(selector, this);\r\n    }\r\n\r\n    /**\r\n     * Disposes all the assets in the container\r\n     */\r\n    dispose() {\r\n      for (let i = 0; i < this.length; i++) {\r\n        this[i].dispose();\r\n        delete this[i];\r\n      }\r\n    }\r\n\r\n    addToScene() {\r\n      this.each(function(element) {\r\n        if (is.Camera(element)) {\r\n          global.scene.addCamera(element);\r\n          return false;\r\n        }\r\n        if (is.Mesh(element)) {\r\n          global.scene.addMesh(element);\r\n          return false;\r\n        }\r\n        if (is.Material(element)) {\r\n          global.scene.addMaterial(element);\r\n          return false;\r\n        }\r\n        if (is.MultiMaterial(element)) {\r\n          global.scene.addMultiMaterial(element);\r\n          return false;\r\n        }\r\n        if (is.Texture(element)) {\r\n          global.scene.addTexture(element);\r\n          return false;\r\n        }\r\n        if (is.Light(element)) {\r\n          global.scene.addLight(element);\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n\r\n    removeFromScene() {\r\n      this.each(function(element) {\r\n        if (is.Camera(element)) {\r\n          global.scene.removeCamera(element);\r\n          return false;\r\n        }\r\n        if (is.Mesh(element)) {\r\n          global.scene.removeMesh(element);\r\n          return false;\r\n        }\r\n        if (is.Material(element)) {\r\n          global.scene.removeMaterial(element);\r\n          return false;\r\n        }\r\n        if (is.MultiMaterial(element)) {\r\n          global.scene.removeMultiMaterial(element);\r\n          return false;\r\n        }\r\n        if (is.Texture(element)) {\r\n          global.scene.removeTexture(element);\r\n          return false;\r\n        }\r\n        if (is.Light(element)) {\r\n          global.scene.removeLight(element);\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n\r\n    // TODO\r\n    patch(item : any) {\r\n\r\n    }\r\n\r\n    //TODO\r\n    /**\r\n     ready(callback : Function) {\r\n        if(this.isReady) {\r\n            callback.call(this, this);\r\n        }\r\n        else {\r\n\r\n        }\r\n    }**/\r\n\r\n    // TODO\r\n    remove(element : any) {\r\n        /**\r\n         let index = this.toArray().indexOf(element);\r\n         if(index) {\r\n\r\n        }\r\n         for (let property in PROPERTIES) {\r\n            if(element instanceof BABYLON[property]) {\r\n                this[this.length++] = element;\r\n                super[PROPERTIES[property]].push(element);\r\n                return;\r\n            }\r\n        }**/\r\n    }\r\n\r\n    //TODO\r\n    fadeIn() {\r\n\r\n    }\r\n\r\n    // TODO\r\n    fadeOut() {\r\n\r\n    }\r\n\r\n}\r\n/**\r\n * Helper to debug selector.\r\n * @param element\r\n * @param selector\r\n * @returns {boolean} true if element match the selector, false otherwise\r\n */\r\nexport function match(element : any, params : string) {\r\n  let _selector = new Selector(params);\r\n  return _selector.matchType(element) && _selector.matchFilters(element);\r\n}\r\n\r\nexport function find(params : string, container : BABYLON.Scene | Elements | BABYLON.AssetContainer) : Elements {\r\n  let elements = new Elements();\r\n  let selector = new Selector(params);\r\n  if (is.Scene(container) || is.AssetContainer(container)) {\r\n    switch (selector.type) {\r\n      case \"material\" :\r\n        container.materials.forEach(function(material) {\r\n          if (selector.matchFilters(material)) {\r\n            elements.add(material);\r\n          }\r\n        });\r\n        break;\r\n      case \"mesh\" :\r\n        container.meshes.forEach(function(mesh) {\r\n          if (selector.matchFilters(mesh)) {\r\n            elements.add(mesh);\r\n          }\r\n        });\r\n        break;\r\n      case \"light\":\r\n        container.lights.forEach(function(light) {\r\n          if (selector.matchFilters(light)) {\r\n            elements.add(light);\r\n          }\r\n        });\r\n        break;\r\n      case \"multimaterial\":\r\n        container.material.forEach(function(material) {\r\n          if (is.MultiMaterial(material)) {\r\n            if (selector.matchFilters(material)) {\r\n              elements.add(material);\r\n            }\r\n          }\r\n        });\r\n        break;\r\n      case \"texture\":\r\n        container.textures.forEach(function(texture) {\r\n          if (selector.matchFilters(texture)) {\r\n            elements.add(texture);\r\n          }\r\n        });\r\n        break;\r\n      case \"camera\":\r\n        container.cameras.forEach(function(camera) {\r\n          if (selector.matchFilters(camera)) {\r\n            elements.add(camera);\r\n          }\r\n        });\r\n        break;\r\n      case \"all\":\r\n        container.materials.forEach(function(material) {\r\n          if (selector.matchFilters(material)) {\r\n            elements.add(material);\r\n          }\r\n        });\r\n        container.meshes.forEach(function(mesh) {\r\n          if (selector.matchFilters(mesh)) {\r\n            elements.add(mesh);\r\n          }\r\n        });\r\n        container.lights.forEach(function(light) {\r\n          if (selector.matchFilters(light)) {\r\n            elements.add(light);\r\n          }\r\n        });\r\n        container.textures.forEach(function(texture) {\r\n          if (selector.matchFilters(texture)) {\r\n            elements.add(texture);\r\n          }\r\n        });\r\n    }\r\n  }\r\n  else {\r\n    container.each(function(element) {\r\n      if (selector.matchType(element) && selector.matchFilters(element)) {\r\n        elements.add(element);\r\n      }\r\n    });\r\n  }\r\n  return elements;\r\n}","import { Elements } from \"./Elements.js\";\r\nimport { global } from \"./global.js\";\r\n\r\nexport var libraries = [];\r\n\r\nexport function createLibrary(name: string, ...elements: Array<any> | any) {\r\n  if (libraries[name]) {\r\n    console.error(\"[_r] Error in _r.createLibrary : \" + name + \" already exists\");\r\n    return;\r\n  }\r\n  else {\r\n    let _elements = new Elements(elements);\r\n    libraries[name] = _elements;\r\n    if (global.TRACE) {\r\n      console.groupCollapsed(\"[_r] - create library \" + name);\r\n      _elements.log();\r\n      console.groupEnd();\r\n    }\r\n  }\r\n}\r\n\r\nexport function library(name: string): Elements {\r\n  return libraries[name];\r\n}\r\n","import { is } from \"./is.js\";\r\nimport { global } from \"./global.js\";\r\nimport { BABYLON } from \"./BABYLON.js\";\r\nimport { createLibrary } from \"./library.js\";\r\n// Error handling in promise can be tricky, for instance errors in then must be catch, we don't want that for our users, so we provide a ready function.\r\n// + We need progress to track async operation.\r\nexport class ImportPromise {\r\n  private _progressCallbacks = [];\r\n  private _readyCallbacks = [];\r\n  private _errorCallbacks = [];\r\n  private _isReady = false;\r\n  private _error = false;\r\n  public _result;\r\n  private _exception;\r\n\r\n  constructor(public promise: Promise<any> | any) {\r\n    if (promise.then) {\r\n      promise.then((container) => {\r\n        this._isReady = true;\r\n        this._readyCallbacks.forEach(function(callback) {\r\n          callback(container);\r\n        });\r\n      });\r\n\r\n      promise.catch((ex) => {\r\n        this._error = true;\r\n        this._exception = ex;\r\n        this._errorCallbacks.forEach(function(callback) {\r\n          callback(ex);\r\n        });\r\n      });\r\n    }\r\n    else {\r\n      this._isReady = true;\r\n      this._result = promise;\r\n    }\r\n  }\r\n\r\n  public triggerProgress(progress) {\r\n    this._progressCallbacks.forEach(function(callback) {\r\n      callback(progress);\r\n    });\r\n  }\r\n\r\n  public progress(callback) {\r\n    this._progressCallbacks.push(callback);\r\n    return this;\r\n  }\r\n\r\n  public ready(callback) {\r\n    if (this._isReady) {\r\n      callback(this._result);\r\n    }\r\n    else {\r\n      this._readyCallbacks.push(callback);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public error(callback) {\r\n    if (!this._isReady) {\r\n      this._errorCallbacks.push(callback);\r\n    }\r\n    else {\r\n      if (this._error) {\r\n        callback(this._exception);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n}\r\n\r\nexport function importScene(...any): ImportPromise {\r\n  return load(...any).ready(function(assetContainer) {\r\n    assetContainer.addAllToScene();\r\n    return assetContainer.scene;\r\n  });\r\n}\r\n\r\nexport function downloadScene(...any): ImportPromise {\r\n  return load(...any);\r\n}\r\n\r\nexport function load(...any) {\r\n  let rootUrl, sceneFileName;\r\n  if (any.length === 1) {\r\n    if (is.String(any[0])) {\r\n      // argument is a filename and assets are in the same folder\r\n      let url = any[0];\r\n      sceneFileName = url.split('/').pop();\r\n      rootUrl = url.replace(sceneFileName, \"\");\r\n\r\n    }\r\n    else {\r\n      // argument is an object\r\n      rootUrl = any[\"assets\"];\r\n      sceneFileName = any[\"scene\"];\r\n    }\r\n  }\r\n  else {\r\n    rootUrl = any[0];\r\n    sceneFileName = any[1];\r\n  }\r\n  if (global.TRACE) {\r\n    console.groupCollapsed(\"[_r] - loadAssets & create library \" + sceneFileName + \" from \" + rootUrl);\r\n    BABYLON.SceneLoader.loggingLevel = BABYLON.SceneLoader.DETAILED_LOGGING;\r\n  }\r\n  let promise = BABYLON.SceneLoader.LoadAssetContainerAsync(rootUrl, sceneFileName, global.scene, function(e) {\r\n    importPromise.triggerProgress(e);\r\n  }).then(function(container) {\r\n    createLibrary(rootUrl + sceneFileName, container);\r\n    BABYLON.SceneLoader.loggingLevel = BABYLON.SceneLoader.NO_LOGGING;\r\n    console.groupEnd();\r\n    return container;\r\n  });\r\n\r\n  let importPromise = new ImportPromise(promise);\r\n  return importPromise;\r\n}","import { is } from \"./is.js\";\r\nimport { Elements, find } from \"./Elements.js\";\r\nimport { libraries } from \"./library.js\";\r\nimport { global } from \"./global.js\";\r\n\r\nexport function select(arg) {\r\n  if (is.String(arg)) {\r\n    if ((<string> arg).toLowerCase() === \"scene\") {\r\n      return new Elements(global.scene);\r\n    }\r\n    let elements = find(arg, global.scene);\r\n    // elements could be in a library not attached to the scene\r\n\r\n    for (let lib in libraries) {\r\n      let selection = libraries[lib].select(arg);\r\n      selection.each(function(item) {\r\n        // item could be in multiple libraries\r\n        if (!elements.contains(item)) {\r\n          elements.add(item);\r\n        }\r\n      });\r\n    }\r\n    if (global.TRACE === true && elements.length == 0) {\r\n      console.warn('BABYLON.Runtime::no object(s) found for selector \"' + arg + '\"');\r\n    }\r\n    return elements;\r\n  }\r\n  else {\r\n    return new Elements(arg);\r\n  }\r\n}","import { is } from \"../is.js\";\r\nimport { select } from \"../select.js\";\r\nimport \"../../node_modules/q/q.js\";\r\n\r\ndeclare const Q;\r\n\r\nexport function patch(...args): Q.Promise<null> {\r\n  let promises = [];\r\n  if (args.length === 1) {\r\n    args[0].forEach(function(item) {\r\n      let selector = Object.getOwnPropertyNames(item)[0];\r\n      select(selector).each(function(element) {\r\n        promises.push(applyPatch(element, item[selector]));\r\n      });\r\n    });\r\n  }\r\n  else {\r\n    if (args.length === 2) {\r\n      select(args[0]).each(function(element) {\r\n        promises.push(applyPatch(element, args[1]));\r\n      });\r\n    }\r\n    else {\r\n      console.error(\"not implemented\");\r\n    }\r\n  }\r\n  return promises.reduce(Q.when, Q());\r\n}\r\n\r\nexport function applyPatch(element: any, patch: any): Q.Promise<null> {\r\n  let properties = Object.getOwnPropertyNames(patch);\r\n  let promises = [];\r\n  properties.forEach(function(property) {\r\n    promises.push(resolveProperty(element, property, patch));\r\n  });\r\n  return promises.reduce(Q.when, Q());\r\n}\r\n\r\nexport function resolveProperty(element, property, source): Q.Promise<any> {\r\n  if (is.Primitive(source[property])) {\r\n    element[property] = source[property];\r\n    return Q(source[property]);\r\n  }\r\n  else {\r\n    if (is.Function(source[property])) {\r\n      if (is.Function(element[property])) {\r\n        element[property] = source[property];\r\n        return Q(source[property]);\r\n      }\r\n      else {\r\n        let res = source[property].call(element);\r\n        if (is.Promise(res)) {\r\n          return res.then(function(result) {\r\n            element[property] = result;\r\n          });\r\n        }\r\n        else {\r\n          element[property] = res;\r\n          return Q(res);\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      if (!element[property]) {\r\n        element[property] = {};\r\n      }\r\n      return applyPatch(element[property], source[property]);\r\n    }\r\n  }\r\n}","// vim:ts=4:sts=4:sw=4:\n/*!\n *\n * Copyright 2009-2017 Kris Kowal under the terms of the MIT\n * license found at https://github.com/kriskowal/q/blob/v1/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n(function (definition) {\n    \"use strict\";\n\n    // This file will function properly as a <script> tag, or a module\n    // using CommonJS and NodeJS or RequireJS module formats.  In\n    // Common/Node/RequireJS, the module exports the Q API and when\n    // executed as a simple <script>, it creates a Q global instead.\n\n    // Montage Require\n    if (typeof bootstrap === \"function\") {\n        bootstrap(\"promise\", definition);\n\n    // CommonJS\n    } else if (typeof exports === \"object\" && typeof module === \"object\") {\n        module.exports = definition();\n\n    // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n        define(definition);\n\n    // SES (Secure EcmaScript)\n    } else if (typeof ses !== \"undefined\") {\n        if (!ses.ok()) {\n            return;\n        } else {\n            ses.makeQ = definition;\n        }\n\n    // <script>\n    } else if (typeof window !== \"undefined\" || typeof self !== \"undefined\") {\n        // Prefer window over self for add-on scripts. Use self for\n        // non-windowed contexts.\n        var global = typeof window !== \"undefined\" ? window : self;\n\n        // Get the `window` object, save the previous Q global\n        // and initialize Q as a global.\n        var previousQ = global.Q;\n        global.Q = definition();\n\n        // Add a noConflict function so Q can be removed from the\n        // global namespace.\n        global.Q.noConflict = function () {\n            global.Q = previousQ;\n            return this;\n        };\n\n    } else {\n        throw new Error(\"This environment was not anticipated by Q. Please file a bug.\");\n    }\n\n})(function () {\n\"use strict\";\n\nvar hasStacks = false;\ntry {\n    throw new Error();\n} catch (e) {\n    hasStacks = !!e.stack;\n}\n\n// All code after this point will be filtered from stack traces reported\n// by Q.\nvar qStartingLine = captureLine();\nvar qFileName;\n\n// shims\n\n// used for fallback in \"allResolved\"\nvar noop = function () {};\n\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\nvar nextTick =(function () {\n    // linked list of tasks (single, with head node)\n    var head = {task: void 0, next: null};\n    var tail = head;\n    var flushing = false;\n    var requestTick = void 0;\n    var isNodeJS = false;\n    // queue for late tasks, used by unhandled rejection tracking\n    var laterQueue = [];\n\n    function flush() {\n        /* jshint loopfunc: true */\n        var task, domain;\n\n        while (head.next) {\n            head = head.next;\n            task = head.task;\n            head.task = void 0;\n            domain = head.domain;\n\n            if (domain) {\n                head.domain = void 0;\n                domain.enter();\n            }\n            runSingle(task, domain);\n\n        }\n        while (laterQueue.length) {\n            task = laterQueue.pop();\n            runSingle(task);\n        }\n        flushing = false;\n    }\n    // runs a single function in the async queue\n    function runSingle(task, domain) {\n        try {\n            task();\n\n        } catch (e) {\n            if (isNodeJS) {\n                // In node, uncaught exceptions are considered fatal errors.\n                // Re-throw them synchronously to interrupt flushing!\n\n                // Ensure continuation if the uncaught exception is suppressed\n                // listening \"uncaughtException\" events (as domains does).\n                // Continue in next event to avoid tick recursion.\n                if (domain) {\n                    domain.exit();\n                }\n                setTimeout(flush, 0);\n                if (domain) {\n                    domain.enter();\n                }\n\n                throw e;\n\n            } else {\n                // In browsers, uncaught exceptions are not fatal.\n                // Re-throw them asynchronously to avoid slow-downs.\n                setTimeout(function () {\n                    throw e;\n                }, 0);\n            }\n        }\n\n        if (domain) {\n            domain.exit();\n        }\n    }\n\n    nextTick = function (task) {\n        tail = tail.next = {\n            task: task,\n            domain: isNodeJS && process.domain,\n            next: null\n        };\n\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n\n    if (typeof process === \"object\" &&\n        process.toString() === \"[object process]\" && process.nextTick) {\n        // Ensure Q is in a real Node environment, with a `process.nextTick`.\n        // To see through fake Node environments:\n        // * Mocha test runner - exposes a `process` global without a `nextTick`\n        // * Browserify - exposes a `process.nexTick` function that uses\n        //   `setTimeout`. In this case `setImmediate` is preferred because\n        //    it is faster. Browserify's `process.toString()` yields\n        //   \"[object Object]\", while in a real Node environment\n        //   `process.toString()` yields \"[object process]\".\n        isNodeJS = true;\n\n        requestTick = function () {\n            process.nextTick(flush);\n        };\n\n    } else if (typeof setImmediate === \"function\") {\n        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n        if (typeof window !== \"undefined\") {\n            requestTick = setImmediate.bind(window, flush);\n        } else {\n            requestTick = function () {\n                setImmediate(flush);\n            };\n        }\n\n    } else if (typeof MessageChannel !== \"undefined\") {\n        // modern browsers\n        // http://www.nonblocking.io/2011/06/windownexttick.html\n        var channel = new MessageChannel();\n        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n        // working message ports the first time a page loads.\n        channel.port1.onmessage = function () {\n            requestTick = requestPortTick;\n            channel.port1.onmessage = flush;\n            flush();\n        };\n        var requestPortTick = function () {\n            // Opera requires us to provide a message payload, regardless of\n            // whether we use it.\n            channel.port2.postMessage(0);\n        };\n        requestTick = function () {\n            setTimeout(flush, 0);\n            requestPortTick();\n        };\n\n    } else {\n        // old browsers\n        requestTick = function () {\n            setTimeout(flush, 0);\n        };\n    }\n    // runs a task after all other tasks have been run\n    // this is useful for unhandled rejection tracking that needs to happen\n    // after all `then`d tasks have been run.\n    nextTick.runAfter = function (task) {\n        laterQueue.push(task);\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n    return nextTick;\n})();\n\n// Attempt to make generics safe in the face of downstream\n// modifications.\n// There is no situation where this is necessary.\n// If you need a security guarantee, these primordials need to be\n// deeply frozen anyway, and if you don’t need a security guarantee,\n// this is just plain paranoid.\n// However, this **might** have the nice side-effect of reducing the size of\n// the minified code by reducing x.call() to merely x()\n// See Mark Miller’s explanation of what this does.\n// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\nvar call = Function.call;\nfunction uncurryThis(f) {\n    return function () {\n        return call.apply(f, arguments);\n    };\n}\n// This is equivalent, but slower:\n// uncurryThis = Function_bind.bind(Function_bind.call);\n// http://jsperf.com/uncurrythis\n\nvar array_slice = uncurryThis(Array.prototype.slice);\n\nvar array_reduce = uncurryThis(\n    Array.prototype.reduce || function (callback, basis) {\n        var index = 0,\n            length = this.length;\n        // concerning the initial value, if one is not provided\n        if (arguments.length === 1) {\n            // seek to the first value in the array, accounting\n            // for the possibility that is is a sparse array\n            do {\n                if (index in this) {\n                    basis = this[index++];\n                    break;\n                }\n                if (++index >= length) {\n                    throw new TypeError();\n                }\n            } while (1);\n        }\n        // reduce\n        for (; index < length; index++) {\n            // account for the possibility that the array is sparse\n            if (index in this) {\n                basis = callback(basis, this[index], index);\n            }\n        }\n        return basis;\n    }\n);\n\nvar array_indexOf = uncurryThis(\n    Array.prototype.indexOf || function (value) {\n        // not a very good shim, but good enough for our one use of it\n        for (var i = 0; i < this.length; i++) {\n            if (this[i] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n);\n\nvar array_map = uncurryThis(\n    Array.prototype.map || function (callback, thisp) {\n        var self = this;\n        var collect = [];\n        array_reduce(self, function (undefined, value, index) {\n            collect.push(callback.call(thisp, value, index, self));\n        }, void 0);\n        return collect;\n    }\n);\n\nvar object_create = Object.create || function (prototype) {\n    function Type() { }\n    Type.prototype = prototype;\n    return new Type();\n};\n\nvar object_defineProperty = Object.defineProperty || function (obj, prop, descriptor) {\n    obj[prop] = descriptor.value;\n    return obj;\n};\n\nvar object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\nvar object_keys = Object.keys || function (object) {\n    var keys = [];\n    for (var key in object) {\n        if (object_hasOwnProperty(object, key)) {\n            keys.push(key);\n        }\n    }\n    return keys;\n};\n\nvar object_toString = uncurryThis(Object.prototype.toString);\n\nfunction isObject(value) {\n    return value === Object(value);\n}\n\n// generator related shims\n\n// FIXME: Remove this function once ES6 generators are in SpiderMonkey.\nfunction isStopIteration(exception) {\n    return (\n        object_toString(exception) === \"[object StopIteration]\" ||\n        exception instanceof QReturnValue\n    );\n}\n\n// FIXME: Remove this helper and Q.return once ES6 generators are in\n// SpiderMonkey.\nvar QReturnValue;\nif (typeof ReturnValue !== \"undefined\") {\n    QReturnValue = ReturnValue;\n} else {\n    QReturnValue = function (value) {\n        this.value = value;\n    };\n}\n\n// long stack traces\n\nvar STACK_JUMP_SEPARATOR = \"From previous event:\";\n\nfunction makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks &&\n        promise.stack &&\n        typeof error === \"object\" &&\n        error !== null &&\n        error.stack\n    ) {\n        var stacks = [];\n        for (var p = promise; !!p; p = p.source) {\n            if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {\n                object_defineProperty(error, \"__minimumStackCounter__\", {value: p.stackCounter, configurable: true});\n                stacks.unshift(p.stack);\n            }\n        }\n        stacks.unshift(error.stack);\n\n        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n        var stack = filterStackString(concatedStacks);\n        object_defineProperty(error, \"stack\", {value: stack, configurable: true});\n    }\n}\n\nfunction filterStackString(stackString) {\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n    for (var i = 0; i < lines.length; ++i) {\n        var line = lines[i];\n\n        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n            desiredLines.push(line);\n        }\n    }\n    return desiredLines.join(\"\\n\");\n}\n\nfunction isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 ||\n           stackLine.indexOf(\"(node.js:\") !== -1;\n}\n\nfunction getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) {\n        return [attempt1[1], Number(attempt1[2])];\n    }\n\n    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) {\n        return [attempt2[1], Number(attempt2[2])];\n    }\n\n    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) {\n        return [attempt3[1], Number(attempt3[2])];\n    }\n}\n\nfunction isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n        return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === qFileName &&\n        lineNumber >= qStartingLine &&\n        lineNumber <= qEndingLine;\n}\n\n// discover own file name and line number range for filtering stack\n// traces\nfunction captureLine() {\n    if (!hasStacks) {\n        return;\n    }\n\n    try {\n        throw new Error();\n    } catch (e) {\n        var lines = e.stack.split(\"\\n\");\n        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n        if (!fileNameAndLineNumber) {\n            return;\n        }\n\n        qFileName = fileNameAndLineNumber[0];\n        return fileNameAndLineNumber[1];\n    }\n}\n\nfunction deprecate(callback, name, alternative) {\n    return function () {\n        if (typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\") {\n            console.warn(name + \" is deprecated, use \" + alternative +\n                         \" instead.\", new Error(\"\").stack);\n        }\n        return callback.apply(callback, arguments);\n    };\n}\n\n// end of shims\n// beginning of real work\n\n/**\n * Constructs a promise for an immediate reference, passes promises through, or\n * coerces promises from different systems.\n * @param value immediate reference or promise\n */\nfunction Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (value instanceof Promise) {\n        return value;\n    }\n\n    // assimilate thenables\n    if (isPromiseAlike(value)) {\n        return coerce(value);\n    } else {\n        return fulfill(value);\n    }\n}\nQ.resolve = Q;\n\n/**\n * Performs a task in a future turn of the event loop.\n * @param {Function} task\n */\nQ.nextTick = nextTick;\n\n/**\n * Controls whether or not long stack traces will be on\n */\nQ.longStackSupport = false;\n\n/**\n * The counter is used to determine the stopping point for building\n * long stack traces. In makeStackTraceLong we walk backwards through\n * the linked list of promises, only stacks which were created before\n * the rejection are concatenated.\n */\nvar longStackCounter = 1;\n\n// enable long stacks if Q_DEBUG is set\nif (typeof process === \"object\" && process && process.env && process.env.Q_DEBUG) {\n    Q.longStackSupport = true;\n}\n\n/**\n * Constructs a {promise, resolve, reject} object.\n *\n * `resolve` is a callback to invoke with a more resolved value for the\n * promise. To fulfill the promise, invoke `resolve` with any value that is\n * not a thenable. To reject the promise, invoke `resolve` with a rejected\n * thenable, or invoke `reject` with the reason directly. To resolve the\n * promise to another thenable, thus putting it in the same state, invoke\n * `resolve` with that other thenable.\n */\nQ.defer = defer;\nfunction defer() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    var messages = [], progressListeners = [], resolvedPromise;\n\n    var deferred = object_create(defer.prototype);\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, operands) {\n        var args = array_slice(arguments);\n        if (messages) {\n            messages.push(args);\n            if (op === \"when\" && operands[1]) { // progress operand\n                progressListeners.push(operands[1]);\n            }\n        } else {\n            Q.nextTick(function () {\n                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n            });\n        }\n    };\n\n    // XXX deprecated\n    promise.valueOf = function () {\n        if (messages) {\n            return promise;\n        }\n        var nearerValue = nearer(resolvedPromise);\n        if (isPromise(nearerValue)) {\n            resolvedPromise = nearerValue; // shorten chain\n        }\n        return nearerValue;\n    };\n\n    promise.inspect = function () {\n        if (!resolvedPromise) {\n            return { state: \"pending\" };\n        }\n        return resolvedPromise.inspect();\n    };\n\n    if (Q.longStackSupport && hasStacks) {\n        try {\n            throw new Error();\n        } catch (e) {\n            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n            // accessor around; that causes memory leaks as per GH-111. Just\n            // reify the stack trace as a string ASAP.\n            //\n            // At the same time, cut off the first line; it's always just\n            // \"[object Promise]\\n\", as per the `toString`.\n            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n            promise.stackCounter = longStackCounter++;\n        }\n    }\n\n    // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n    // consolidating them into `become`, since otherwise we'd create new\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\n    function become(newPromise) {\n        resolvedPromise = newPromise;\n\n        if (Q.longStackSupport && hasStacks) {\n            // Only hold a reference to the new promise if long stacks\n            // are enabled to reduce memory usage\n            promise.source = newPromise;\n        }\n\n        array_reduce(messages, function (undefined, message) {\n            Q.nextTick(function () {\n                newPromise.promiseDispatch.apply(newPromise, message);\n            });\n        }, void 0);\n\n        messages = void 0;\n        progressListeners = void 0;\n    }\n\n    deferred.promise = promise;\n    deferred.resolve = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(Q(value));\n    };\n\n    deferred.fulfill = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(fulfill(value));\n    };\n    deferred.reject = function (reason) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(reject(reason));\n    };\n    deferred.notify = function (progress) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        array_reduce(progressListeners, function (undefined, progressListener) {\n            Q.nextTick(function () {\n                progressListener(progress);\n            });\n        }, void 0);\n    };\n\n    return deferred;\n}\n\n/**\n * Creates a Node-style callback that will resolve or reject the deferred\n * promise.\n * @returns a nodeback\n */\ndefer.prototype.makeNodeResolver = function () {\n    var self = this;\n    return function (error, value) {\n        if (error) {\n            self.reject(error);\n        } else if (arguments.length > 2) {\n            self.resolve(array_slice(arguments, 1));\n        } else {\n            self.resolve(value);\n        }\n    };\n};\n\n/**\n * @param resolver {Function} a function that returns nothing and accepts\n * the resolve, reject, and notify functions for a deferred.\n * @returns a promise that may be resolved with the given resolve and reject\n * functions, or rejected by a thrown exception in resolver\n */\nQ.Promise = promise; // ES6\nQ.promise = promise;\nfunction promise(resolver) {\n    if (typeof resolver !== \"function\") {\n        throw new TypeError(\"resolver must be a function.\");\n    }\n    var deferred = defer();\n    try {\n        resolver(deferred.resolve, deferred.reject, deferred.notify);\n    } catch (reason) {\n        deferred.reject(reason);\n    }\n    return deferred.promise;\n}\n\npromise.race = race; // ES6\npromise.all = all; // ES6\npromise.reject = reject; // ES6\npromise.resolve = Q; // ES6\n\n// XXX experimental.  This method is a way to denote that a local value is\n// serializable and should be immediately dispatched to a remote upon request,\n// instead of passing a reference.\nQ.passByCopy = function (object) {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return object;\n};\n\nPromise.prototype.passByCopy = function () {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return this;\n};\n\n/**\n * If two promises eventually fulfill to the same value, promises that value,\n * but otherwise rejects.\n * @param x {Any*}\n * @param y {Any*}\n * @returns {Any*} a promise for x and y if they are the same, but a rejection\n * otherwise.\n *\n */\nQ.join = function (x, y) {\n    return Q(x).join(y);\n};\n\nPromise.prototype.join = function (that) {\n    return Q([this, that]).spread(function (x, y) {\n        if (x === y) {\n            // TODO: \"===\" should be Object.is or equiv\n            return x;\n        } else {\n            throw new Error(\"Q can't join: not the same: \" + x + \" \" + y);\n        }\n    });\n};\n\n/**\n * Returns a promise for the first of an array of promises to become settled.\n * @param answers {Array[Any*]} promises to race\n * @returns {Any*} the first promise to be settled\n */\nQ.race = race;\nfunction race(answerPs) {\n    return promise(function (resolve, reject) {\n        // Switch to this once we can assume at least ES5\n        // answerPs.forEach(function (answerP) {\n        //     Q(answerP).then(resolve, reject);\n        // });\n        // Use this in the meantime\n        for (var i = 0, len = answerPs.length; i < len; i++) {\n            Q(answerPs[i]).then(resolve, reject);\n        }\n    });\n}\n\nPromise.prototype.race = function () {\n    return this.then(Q.race);\n};\n\n/**\n * Constructs a Promise with a promise descriptor object and optional fallback\n * function.  The descriptor contains methods like when(rejected), get(name),\n * set(name, value), post(name, args), and delete(name), which all\n * return either a value, a promise for a value, or a rejection.  The fallback\n * accepts the operation name, a resolver, and any further arguments that would\n * have been forwarded to the appropriate method above had a method been\n * provided with the proper name.  The API makes no guarantees about the nature\n * of the returned object, apart from that it is usable whereever promises are\n * bought and sold.\n */\nQ.makePromise = Promise;\nfunction Promise(descriptor, fallback, inspect) {\n    if (fallback === void 0) {\n        fallback = function (op) {\n            return reject(new Error(\n                \"Promise does not support operation: \" + op\n            ));\n        };\n    }\n    if (inspect === void 0) {\n        inspect = function () {\n            return {state: \"unknown\"};\n        };\n    }\n\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, args) {\n        var result;\n        try {\n            if (descriptor[op]) {\n                result = descriptor[op].apply(promise, args);\n            } else {\n                result = fallback.call(promise, op, args);\n            }\n        } catch (exception) {\n            result = reject(exception);\n        }\n        if (resolve) {\n            resolve(result);\n        }\n    };\n\n    promise.inspect = inspect;\n\n    // XXX deprecated `valueOf` and `exception` support\n    if (inspect) {\n        var inspected = inspect();\n        if (inspected.state === \"rejected\") {\n            promise.exception = inspected.reason;\n        }\n\n        promise.valueOf = function () {\n            var inspected = inspect();\n            if (inspected.state === \"pending\" ||\n                inspected.state === \"rejected\") {\n                return promise;\n            }\n            return inspected.value;\n        };\n    }\n\n    return promise;\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.then = function (fulfilled, rejected, progressed) {\n    var self = this;\n    var deferred = defer();\n    var done = false;   // ensure the untrusted promise makes at most a\n                        // single call to one of the callbacks\n\n    function _fulfilled(value) {\n        try {\n            return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n        } catch (exception) {\n            return reject(exception);\n        }\n    }\n\n    function _rejected(exception) {\n        if (typeof rejected === \"function\") {\n            makeStackTraceLong(exception, self);\n            try {\n                return rejected(exception);\n            } catch (newException) {\n                return reject(newException);\n            }\n        }\n        return reject(exception);\n    }\n\n    function _progressed(value) {\n        return typeof progressed === \"function\" ? progressed(value) : value;\n    }\n\n    Q.nextTick(function () {\n        self.promiseDispatch(function (value) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_fulfilled(value));\n        }, \"when\", [function (exception) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_rejected(exception));\n        }]);\n    });\n\n    // Progress propagator need to be attached in the current tick.\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n        var newValue;\n        var threw = false;\n        try {\n            newValue = _progressed(value);\n        } catch (e) {\n            threw = true;\n            if (Q.onerror) {\n                Q.onerror(e);\n            } else {\n                throw e;\n            }\n        }\n\n        if (!threw) {\n            deferred.notify(newValue);\n        }\n    }]);\n\n    return deferred.promise;\n};\n\nQ.tap = function (promise, callback) {\n    return Q(promise).tap(callback);\n};\n\n/**\n * Works almost like \"finally\", but not called for rejections.\n * Original resolution value is passed through callback unaffected.\n * Callback may return a promise that will be awaited for.\n * @param {Function} callback\n * @returns {Q.Promise}\n * @example\n * doSomething()\n *   .then(...)\n *   .tap(console.log)\n *   .then(...);\n */\nPromise.prototype.tap = function (callback) {\n    callback = Q(callback);\n\n    return this.then(function (value) {\n        return callback.fcall(value).thenResolve(value);\n    });\n};\n\n/**\n * Registers an observer on a promise.\n *\n * Guarantees:\n *\n * 1. that fulfilled and rejected will be called only once.\n * 2. that either the fulfilled callback or the rejected callback will be\n *    called, but not both.\n * 3. that fulfilled and rejected will not be called in this turn.\n *\n * @param value      promise or immediate reference to observe\n * @param fulfilled  function to be called with the fulfilled value\n * @param rejected   function to be called with the rejection exception\n * @param progressed function to be called on any progress notifications\n * @return promise for the return value from the invoked callback\n */\nQ.when = when;\nfunction when(value, fulfilled, rejected, progressed) {\n    return Q(value).then(fulfilled, rejected, progressed);\n}\n\nPromise.prototype.thenResolve = function (value) {\n    return this.then(function () { return value; });\n};\n\nQ.thenResolve = function (promise, value) {\n    return Q(promise).thenResolve(value);\n};\n\nPromise.prototype.thenReject = function (reason) {\n    return this.then(function () { throw reason; });\n};\n\nQ.thenReject = function (promise, reason) {\n    return Q(promise).thenReject(reason);\n};\n\n/**\n * If an object is not a promise, it is as \"near\" as possible.\n * If a promise is rejected, it is as \"near\" as possible too.\n * If it’s a fulfilled promise, the fulfillment value is nearer.\n * If it’s a deferred promise and the deferred has been resolved, the\n * resolution is \"nearer\".\n * @param object\n * @returns most resolved (nearest) form of the object\n */\n\n// XXX should we re-do this?\nQ.nearer = nearer;\nfunction nearer(value) {\n    if (isPromise(value)) {\n        var inspected = value.inspect();\n        if (inspected.state === \"fulfilled\") {\n            return inspected.value;\n        }\n    }\n    return value;\n}\n\n/**\n * @returns whether the given object is a promise.\n * Otherwise it is a fulfilled value.\n */\nQ.isPromise = isPromise;\nfunction isPromise(object) {\n    return object instanceof Promise;\n}\n\nQ.isPromiseAlike = isPromiseAlike;\nfunction isPromiseAlike(object) {\n    return isObject(object) && typeof object.then === \"function\";\n}\n\n/**\n * @returns whether the given object is a pending promise, meaning not\n * fulfilled or rejected.\n */\nQ.isPending = isPending;\nfunction isPending(object) {\n    return isPromise(object) && object.inspect().state === \"pending\";\n}\n\nPromise.prototype.isPending = function () {\n    return this.inspect().state === \"pending\";\n};\n\n/**\n * @returns whether the given object is a value or fulfilled\n * promise.\n */\nQ.isFulfilled = isFulfilled;\nfunction isFulfilled(object) {\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n}\n\nPromise.prototype.isFulfilled = function () {\n    return this.inspect().state === \"fulfilled\";\n};\n\n/**\n * @returns whether the given object is a rejected promise.\n */\nQ.isRejected = isRejected;\nfunction isRejected(object) {\n    return isPromise(object) && object.inspect().state === \"rejected\";\n}\n\nPromise.prototype.isRejected = function () {\n    return this.inspect().state === \"rejected\";\n};\n\n//// BEGIN UNHANDLED REJECTION TRACKING\n\n// This promise library consumes exceptions thrown in handlers so they can be\n// handled by a subsequent promise.  The exceptions get added to this array when\n// they are created, and removed when they are handled.  Note that in ES6 or\n// shimmed environments, this would naturally be a `Set`.\nvar unhandledReasons = [];\nvar unhandledRejections = [];\nvar reportedUnhandledRejections = [];\nvar trackUnhandledRejections = true;\n\nfunction resetUnhandledRejections() {\n    unhandledReasons.length = 0;\n    unhandledRejections.length = 0;\n\n    if (!trackUnhandledRejections) {\n        trackUnhandledRejections = true;\n    }\n}\n\nfunction trackRejection(promise, reason) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n    if (typeof process === \"object\" && typeof process.emit === \"function\") {\n        Q.nextTick.runAfter(function () {\n            if (array_indexOf(unhandledRejections, promise) !== -1) {\n                process.emit(\"unhandledRejection\", reason, promise);\n                reportedUnhandledRejections.push(promise);\n            }\n        });\n    }\n\n    unhandledRejections.push(promise);\n    if (reason && typeof reason.stack !== \"undefined\") {\n        unhandledReasons.push(reason.stack);\n    } else {\n        unhandledReasons.push(\"(no stack) \" + reason);\n    }\n}\n\nfunction untrackRejection(promise) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    var at = array_indexOf(unhandledRejections, promise);\n    if (at !== -1) {\n        if (typeof process === \"object\" && typeof process.emit === \"function\") {\n            Q.nextTick.runAfter(function () {\n                var atReport = array_indexOf(reportedUnhandledRejections, promise);\n                if (atReport !== -1) {\n                    process.emit(\"rejectionHandled\", unhandledReasons[at], promise);\n                    reportedUnhandledRejections.splice(atReport, 1);\n                }\n            });\n        }\n        unhandledRejections.splice(at, 1);\n        unhandledReasons.splice(at, 1);\n    }\n}\n\nQ.resetUnhandledRejections = resetUnhandledRejections;\n\nQ.getUnhandledReasons = function () {\n    // Make a copy so that consumers can't interfere with our internal state.\n    return unhandledReasons.slice();\n};\n\nQ.stopUnhandledRejectionTracking = function () {\n    resetUnhandledRejections();\n    trackUnhandledRejections = false;\n};\n\nresetUnhandledRejections();\n\n//// END UNHANDLED REJECTION TRACKING\n\n/**\n * Constructs a rejected promise.\n * @param reason value describing the failure\n */\nQ.reject = reject;\nfunction reject(reason) {\n    var rejection = Promise({\n        \"when\": function (rejected) {\n            // note that the error has been handled\n            if (rejected) {\n                untrackRejection(this);\n            }\n            return rejected ? rejected(reason) : this;\n        }\n    }, function fallback() {\n        return this;\n    }, function inspect() {\n        return { state: \"rejected\", reason: reason };\n    });\n\n    // Note that the reason has not been handled.\n    trackRejection(rejection, reason);\n\n    return rejection;\n}\n\n/**\n * Constructs a fulfilled promise for an immediate reference.\n * @param value immediate reference\n */\nQ.fulfill = fulfill;\nfunction fulfill(value) {\n    return Promise({\n        \"when\": function () {\n            return value;\n        },\n        \"get\": function (name) {\n            return value[name];\n        },\n        \"set\": function (name, rhs) {\n            value[name] = rhs;\n        },\n        \"delete\": function (name) {\n            delete value[name];\n        },\n        \"post\": function (name, args) {\n            // Mark Miller proposes that post with no name should apply a\n            // promised function.\n            if (name === null || name === void 0) {\n                return value.apply(void 0, args);\n            } else {\n                return value[name].apply(value, args);\n            }\n        },\n        \"apply\": function (thisp, args) {\n            return value.apply(thisp, args);\n        },\n        \"keys\": function () {\n            return object_keys(value);\n        }\n    }, void 0, function inspect() {\n        return { state: \"fulfilled\", value: value };\n    });\n}\n\n/**\n * Converts thenables to Q promises.\n * @param promise thenable promise\n * @returns a Q promise\n */\nfunction coerce(promise) {\n    var deferred = defer();\n    Q.nextTick(function () {\n        try {\n            promise.then(deferred.resolve, deferred.reject, deferred.notify);\n        } catch (exception) {\n            deferred.reject(exception);\n        }\n    });\n    return deferred.promise;\n}\n\n/**\n * Annotates an object such that it will never be\n * transferred away from this process over any promise\n * communication channel.\n * @param object\n * @returns promise a wrapping of that object that\n * additionally responds to the \"isDef\" message\n * without a rejection.\n */\nQ.master = master;\nfunction master(object) {\n    return Promise({\n        \"isDef\": function () {}\n    }, function fallback(op, args) {\n        return dispatch(object, op, args);\n    }, function () {\n        return Q(object).inspect();\n    });\n}\n\n/**\n * Spreads the values of a promised array of arguments into the\n * fulfillment callback.\n * @param fulfilled callback that receives variadic arguments from the\n * promised array\n * @param rejected callback that receives the exception if the promise\n * is rejected.\n * @returns a promise for the return value or thrown exception of\n * either callback.\n */\nQ.spread = spread;\nfunction spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n}\n\nPromise.prototype.spread = function (fulfilled, rejected) {\n    return this.all().then(function (array) {\n        return fulfilled.apply(void 0, array);\n    }, rejected);\n};\n\n/**\n * The async function is a decorator for generator functions, turning\n * them into asynchronous generators.  Although generators are only part\n * of the newest ECMAScript 6 drafts, this code does not cause syntax\n * errors in older engines.  This code should continue to work and will\n * in fact improve over time as the language improves.\n *\n * ES6 generators are currently part of V8 version 3.19 with the\n * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n * for longer, but under an older Python-inspired form.  This function\n * works on both kinds of generators.\n *\n * Decorates a generator function such that:\n *  - it may yield promises\n *  - execution will continue when that promise is fulfilled\n *  - the value of the yield expression will be the fulfilled value\n *  - it returns a promise for the return value (when the generator\n *    stops iterating)\n *  - the decorated function returns a promise for the return value\n *    of the generator or the first rejected promise among those\n *    yielded.\n *  - if an error is thrown in the generator, it propagates through\n *    every following yield until it is caught, or until it escapes\n *    the generator function altogether, and is translated into a\n *    rejection for the promise returned by the decorated generator.\n */\nQ.async = async;\nfunction async(makeGenerator) {\n    return function () {\n        // when verb is \"send\", arg is a value\n        // when verb is \"throw\", arg is an exception\n        function continuer(verb, arg) {\n            var result;\n\n            // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n            // engine that has a deployed base of browsers that support generators.\n            // However, SM's generators use the Python-inspired semantics of\n            // outdated ES6 drafts.  We would like to support ES6, but we'd also\n            // like to make it possible to use generators in deployed browsers, so\n            // we also support Python-style generators.  At some point we can remove\n            // this block.\n\n            if (typeof StopIteration === \"undefined\") {\n                // ES6 Generators\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    return reject(exception);\n                }\n                if (result.done) {\n                    return Q(result.value);\n                } else {\n                    return when(result.value, callback, errback);\n                }\n            } else {\n                // SpiderMonkey Generators\n                // FIXME: Remove this case when SM does ES6 generators.\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    if (isStopIteration(exception)) {\n                        return Q(exception.value);\n                    } else {\n                        return reject(exception);\n                    }\n                }\n                return when(result, callback, errback);\n            }\n        }\n        var generator = makeGenerator.apply(this, arguments);\n        var callback = continuer.bind(continuer, \"next\");\n        var errback = continuer.bind(continuer, \"throw\");\n        return callback();\n    };\n}\n\n/**\n * The spawn function is a small wrapper around async that immediately\n * calls the generator and also ends the promise chain, so that any\n * unhandled errors are thrown instead of forwarded to the error\n * handler. This is useful because it's extremely common to run\n * generators at the top-level to work with libraries.\n */\nQ.spawn = spawn;\nfunction spawn(makeGenerator) {\n    Q.done(Q.async(makeGenerator)());\n}\n\n// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n/**\n * Throws a ReturnValue exception to stop an asynchronous generator.\n *\n * This interface is a stop-gap measure to support generator return\n * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n * generators like Chromium 29, just use \"return\" in your generator\n * functions.\n *\n * @param value the return value for the surrounding generator\n * @throws ReturnValue exception with the value.\n * @example\n * // ES6 style\n * Q.async(function* () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      return foo + bar;\n * })\n * // Older SpiderMonkey style\n * Q.async(function () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      Q.return(foo + bar);\n * })\n */\nQ[\"return\"] = _return;\nfunction _return(value) {\n    throw new QReturnValue(value);\n}\n\n/**\n * The promised function decorator ensures that any promise arguments\n * are settled and passed as values (`this` is also settled and passed\n * as a value).  It will also ensure that the result of a function is\n * always a promise.\n *\n * @example\n * var add = Q.promised(function (a, b) {\n *     return a + b;\n * });\n * add(Q(a), Q(B));\n *\n * @param {function} callback The function to decorate\n * @returns {function} a function that has been decorated.\n */\nQ.promised = promised;\nfunction promised(callback) {\n    return function () {\n        return spread([this, all(arguments)], function (self, args) {\n            return callback.apply(self, args);\n        });\n    };\n}\n\n/**\n * sends a message to a value in a future turn\n * @param object* the recipient\n * @param op the name of the message operation, e.g., \"when\",\n * @param args further arguments to be forwarded to the operation\n * @returns result {Promise} a promise for the result of the operation\n */\nQ.dispatch = dispatch;\nfunction dispatch(object, op, args) {\n    return Q(object).dispatch(op, args);\n}\n\nPromise.prototype.dispatch = function (op, args) {\n    var self = this;\n    var deferred = defer();\n    Q.nextTick(function () {\n        self.promiseDispatch(deferred.resolve, op, args);\n    });\n    return deferred.promise;\n};\n\n/**\n * Gets the value of a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to get\n * @return promise for the property value\n */\nQ.get = function (object, key) {\n    return Q(object).dispatch(\"get\", [key]);\n};\n\nPromise.prototype.get = function (key) {\n    return this.dispatch(\"get\", [key]);\n};\n\n/**\n * Sets the value of a property in a future turn.\n * @param object    promise or immediate reference for object object\n * @param name      name of property to set\n * @param value     new value of property\n * @return promise for the return value\n */\nQ.set = function (object, key, value) {\n    return Q(object).dispatch(\"set\", [key, value]);\n};\n\nPromise.prototype.set = function (key, value) {\n    return this.dispatch(\"set\", [key, value]);\n};\n\n/**\n * Deletes a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to delete\n * @return promise for the return value\n */\nQ.del = // XXX legacy\nQ[\"delete\"] = function (object, key) {\n    return Q(object).dispatch(\"delete\", [key]);\n};\n\nPromise.prototype.del = // XXX legacy\nPromise.prototype[\"delete\"] = function (key) {\n    return this.dispatch(\"delete\", [key]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param value     a value to post, typically an array of\n *                  invocation arguments for promises that\n *                  are ultimately backed with `resolve` values,\n *                  as opposed to those backed with URLs\n *                  wherein the posted value can be any\n *                  JSON serializable object.\n * @return promise for the return value\n */\n// bound locally because it is used by other methods\nQ.mapply = // XXX As proposed by \"Redsandro\"\nQ.post = function (object, name, args) {\n    return Q(object).dispatch(\"post\", [name, args]);\n};\n\nPromise.prototype.mapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.post = function (name, args) {\n    return this.dispatch(\"post\", [name, args]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param ...args   array of invocation arguments\n * @return promise for the return value\n */\nQ.send = // XXX Mark Miller's proposed parlance\nQ.mcall = // XXX As proposed by \"Redsandro\"\nQ.invoke = function (object, name /*...args*/) {\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n};\n\nPromise.prototype.send = // XXX Mark Miller's proposed parlance\nPromise.prototype.mcall = // XXX As proposed by \"Redsandro\"\nPromise.prototype.invoke = function (name /*...args*/) {\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n};\n\n/**\n * Applies the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param args      array of application arguments\n */\nQ.fapply = function (object, args) {\n    return Q(object).dispatch(\"apply\", [void 0, args]);\n};\n\nPromise.prototype.fapply = function (args) {\n    return this.dispatch(\"apply\", [void 0, args]);\n};\n\n/**\n * Calls the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ[\"try\"] =\nQ.fcall = function (object /* ...args*/) {\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n};\n\nPromise.prototype.fcall = function (/*...args*/) {\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n};\n\n/**\n * Binds the promised function, transforming return values into a fulfilled\n * promise and thrown errors into a rejected one.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ.fbind = function (object /*...args*/) {\n    var promise = Q(object);\n    var args = array_slice(arguments, 1);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\nPromise.prototype.fbind = function (/*...args*/) {\n    var promise = this;\n    var args = array_slice(arguments);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\n\n/**\n * Requests the names of the owned properties of a promised\n * object in a future turn.\n * @param object    promise or immediate reference for target object\n * @return promise for the keys of the eventually settled object\n */\nQ.keys = function (object) {\n    return Q(object).dispatch(\"keys\", []);\n};\n\nPromise.prototype.keys = function () {\n    return this.dispatch(\"keys\", []);\n};\n\n/**\n * Turns an array of promises into a promise for an array.  If any of\n * the promises gets rejected, the whole array is rejected immediately.\n * @param {Array*} an array (or promise for an array) of values (or\n * promises for values)\n * @returns a promise for an array of the corresponding values\n */\n// By Mark Miller\n// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\nQ.all = all;\nfunction all(promises) {\n    return when(promises, function (promises) {\n        var pendingCount = 0;\n        var deferred = defer();\n        array_reduce(promises, function (undefined, promise, index) {\n            var snapshot;\n            if (\n                isPromise(promise) &&\n                (snapshot = promise.inspect()).state === \"fulfilled\"\n            ) {\n                promises[index] = snapshot.value;\n            } else {\n                ++pendingCount;\n                when(\n                    promise,\n                    function (value) {\n                        promises[index] = value;\n                        if (--pendingCount === 0) {\n                            deferred.resolve(promises);\n                        }\n                    },\n                    deferred.reject,\n                    function (progress) {\n                        deferred.notify({ index: index, value: progress });\n                    }\n                );\n            }\n        }, void 0);\n        if (pendingCount === 0) {\n            deferred.resolve(promises);\n        }\n        return deferred.promise;\n    });\n}\n\nPromise.prototype.all = function () {\n    return all(this);\n};\n\n/**\n * Returns the first resolved promise of an array. Prior rejected promises are\n * ignored.  Rejects only if all promises are rejected.\n * @param {Array*} an array containing values or promises for values\n * @returns a promise fulfilled with the value of the first resolved promise,\n * or a rejected promise if all promises are rejected.\n */\nQ.any = any;\n\nfunction any(promises) {\n    if (promises.length === 0) {\n        return Q.resolve();\n    }\n\n    var deferred = Q.defer();\n    var pendingCount = 0;\n    array_reduce(promises, function (prev, current, index) {\n        var promise = promises[index];\n\n        pendingCount++;\n\n        when(promise, onFulfilled, onRejected, onProgress);\n        function onFulfilled(result) {\n            deferred.resolve(result);\n        }\n        function onRejected(err) {\n            pendingCount--;\n            if (pendingCount === 0) {\n                var rejection = err || new Error(\"\" + err);\n\n                rejection.message = (\"Q can't get fulfillment value from any promise, all \" +\n                    \"promises were rejected. Last error message: \" + rejection.message);\n\n                deferred.reject(rejection);\n            }\n        }\n        function onProgress(progress) {\n            deferred.notify({\n                index: index,\n                value: progress\n            });\n        }\n    }, undefined);\n\n    return deferred.promise;\n}\n\nPromise.prototype.any = function () {\n    return any(this);\n};\n\n/**\n * Waits for all promises to be settled, either fulfilled or\n * rejected.  This is distinct from `all` since that would stop\n * waiting at the first rejection.  The promise returned by\n * `allResolved` will never be rejected.\n * @param promises a promise for an array (or an array) of promises\n * (or values)\n * @return a promise for an array of promises\n */\nQ.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\nfunction allResolved(promises) {\n    return when(promises, function (promises) {\n        promises = array_map(promises, Q);\n        return when(all(array_map(promises, function (promise) {\n            return when(promise, noop, noop);\n        })), function () {\n            return promises;\n        });\n    });\n}\n\nPromise.prototype.allResolved = function () {\n    return allResolved(this);\n};\n\n/**\n * @see Promise#allSettled\n */\nQ.allSettled = allSettled;\nfunction allSettled(promises) {\n    return Q(promises).allSettled();\n}\n\n/**\n * Turns an array of promises into a promise for an array of their states (as\n * returned by `inspect`) when they have all settled.\n * @param {Array[Any*]} values an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Array[State]} an array of states for the respective values.\n */\nPromise.prototype.allSettled = function () {\n    return this.then(function (promises) {\n        return all(array_map(promises, function (promise) {\n            promise = Q(promise);\n            function regardless() {\n                return promise.inspect();\n            }\n            return promise.then(regardless, regardless);\n        }));\n    });\n};\n\n/**\n * Captures the failure of a promise, giving an oportunity to recover\n * with a callback.  If the given promise is fulfilled, the returned\n * promise is fulfilled.\n * @param {Any*} promise for something\n * @param {Function} callback to fulfill the returned promise if the\n * given promise is rejected\n * @returns a promise for the return value of the callback\n */\nQ.fail = // XXX legacy\nQ[\"catch\"] = function (object, rejected) {\n    return Q(object).then(void 0, rejected);\n};\n\nPromise.prototype.fail = // XXX legacy\nPromise.prototype[\"catch\"] = function (rejected) {\n    return this.then(void 0, rejected);\n};\n\n/**\n * Attaches a listener that can respond to progress notifications from a\n * promise's originating deferred. This listener receives the exact arguments\n * passed to ``deferred.notify``.\n * @param {Any*} promise for something\n * @param {Function} callback to receive any progress notifications\n * @returns the given promise, unchanged\n */\nQ.progress = progress;\nfunction progress(object, progressed) {\n    return Q(object).then(void 0, void 0, progressed);\n}\n\nPromise.prototype.progress = function (progressed) {\n    return this.then(void 0, void 0, progressed);\n};\n\n/**\n * Provides an opportunity to observe the settling of a promise,\n * regardless of whether the promise is fulfilled or rejected.  Forwards\n * the resolution to the returned promise when the callback is done.\n * The callback can return a promise to defer completion.\n * @param {Any*} promise\n * @param {Function} callback to observe the resolution of the given\n * promise, takes no arguments.\n * @returns a promise for the resolution of the given promise when\n * ``fin`` is done.\n */\nQ.fin = // XXX legacy\nQ[\"finally\"] = function (object, callback) {\n    return Q(object)[\"finally\"](callback);\n};\n\nPromise.prototype.fin = // XXX legacy\nPromise.prototype[\"finally\"] = function (callback) {\n    if (!callback || typeof callback.apply !== \"function\") {\n        throw new Error(\"Q can't apply finally callback\");\n    }\n    callback = Q(callback);\n    return this.then(function (value) {\n        return callback.fcall().then(function () {\n            return value;\n        });\n    }, function (reason) {\n        // TODO attempt to recycle the rejection with \"this\".\n        return callback.fcall().then(function () {\n            throw reason;\n        });\n    });\n};\n\n/**\n * Terminates a chain of promises, forcing rejections to be\n * thrown as exceptions.\n * @param {Any*} promise at the end of a chain of promises\n * @returns nothing\n */\nQ.done = function (object, fulfilled, rejected, progress) {\n    return Q(object).done(fulfilled, rejected, progress);\n};\n\nPromise.prototype.done = function (fulfilled, rejected, progress) {\n    var onUnhandledError = function (error) {\n        // forward to a future turn so that ``when``\n        // does not catch it and turn it into a rejection.\n        Q.nextTick(function () {\n            makeStackTraceLong(error, promise);\n            if (Q.onerror) {\n                Q.onerror(error);\n            } else {\n                throw error;\n            }\n        });\n    };\n\n    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n    var promise = fulfilled || rejected || progress ?\n        this.then(fulfilled, rejected, progress) :\n        this;\n\n    if (typeof process === \"object\" && process && process.domain) {\n        onUnhandledError = process.domain.bind(onUnhandledError);\n    }\n\n    promise.then(void 0, onUnhandledError);\n};\n\n/**\n * Causes a promise to be rejected if it does not get fulfilled before\n * some milliseconds time out.\n * @param {Any*} promise\n * @param {Number} milliseconds timeout\n * @param {Any*} custom error message or Error object (optional)\n * @returns a promise for the resolution of the given promise if it is\n * fulfilled before the timeout, otherwise rejected.\n */\nQ.timeout = function (object, ms, error) {\n    return Q(object).timeout(ms, error);\n};\n\nPromise.prototype.timeout = function (ms, error) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function () {\n        if (!error || \"string\" === typeof error) {\n            error = new Error(error || \"Timed out after \" + ms + \" ms\");\n            error.code = \"ETIMEDOUT\";\n        }\n        deferred.reject(error);\n    }, ms);\n\n    this.then(function (value) {\n        clearTimeout(timeoutId);\n        deferred.resolve(value);\n    }, function (exception) {\n        clearTimeout(timeoutId);\n        deferred.reject(exception);\n    }, deferred.notify);\n\n    return deferred.promise;\n};\n\n/**\n * Returns a promise for the given value (or promised value), some\n * milliseconds after it resolved. Passes rejections immediately.\n * @param {Any*} promise\n * @param {Number} milliseconds\n * @returns a promise for the resolution of the given promise after milliseconds\n * time has elapsed since the resolution of the given promise.\n * If the given promise rejects, that is passed immediately.\n */\nQ.delay = function (object, timeout) {\n    if (timeout === void 0) {\n        timeout = object;\n        object = void 0;\n    }\n    return Q(object).delay(timeout);\n};\n\nPromise.prototype.delay = function (timeout) {\n    return this.then(function (value) {\n        var deferred = defer();\n        setTimeout(function () {\n            deferred.resolve(value);\n        }, timeout);\n        return deferred.promise;\n    });\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided as an array, and returns a promise.\n *\n *      Q.nfapply(FS.readFile, [__filename])\n *      .then(function (content) {\n *      })\n *\n */\nQ.nfapply = function (callback, args) {\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfapply = function (args) {\n    var deferred = defer();\n    var nodeArgs = array_slice(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided individually, and returns a promise.\n * @example\n * Q.nfcall(FS.readFile, __filename)\n * .then(function (content) {\n * })\n *\n */\nQ.nfcall = function (callback /*...args*/) {\n    var args = array_slice(arguments, 1);\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfcall = function (/*...args*/) {\n    var nodeArgs = array_slice(arguments);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Wraps a NodeJS continuation passing function and returns an equivalent\n * version that returns a promise.\n * @example\n * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n * .then(console.log)\n * .done()\n */\nQ.nfbind =\nQ.denodeify = function (callback /*...args*/) {\n    if (callback === undefined) {\n        throw new Error(\"Q can't wrap an undefined function\");\n    }\n    var baseArgs = array_slice(arguments, 1);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        Q(callback).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nfbind =\nPromise.prototype.denodeify = function (/*...args*/) {\n    var args = array_slice(arguments);\n    args.unshift(this);\n    return Q.denodeify.apply(void 0, args);\n};\n\nQ.nbind = function (callback, thisp /*...args*/) {\n    var baseArgs = array_slice(arguments, 2);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        function bound() {\n            return callback.apply(thisp, arguments);\n        }\n        Q(bound).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nbind = function (/*thisp, ...args*/) {\n    var args = array_slice(arguments, 0);\n    args.unshift(this);\n    return Q.nbind.apply(void 0, args);\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback with a given array of arguments, plus a provided callback.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param {Array} args arguments to pass to the method; the callback\n * will be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nmapply = // XXX As proposed by \"Redsandro\"\nQ.npost = function (object, name, args) {\n    return Q(object).npost(name, args);\n};\n\nPromise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.npost = function (name, args) {\n    var nodeArgs = array_slice(args || []);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback, forwarding the given variadic arguments, plus a provided\n * callback argument.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param ...args arguments to pass to the method; the callback will\n * be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nsend = // XXX Based on Mark Miller's proposed \"send\"\nQ.nmcall = // XXX Based on \"Redsandro's\" proposal\nQ.ninvoke = function (object, name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 2);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\nPromise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\nPromise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\nPromise.prototype.ninvoke = function (name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 1);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * If a function would like to support both Node continuation-passing-style and\n * promise-returning-style, it can end its internal promise chain with\n * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n * elects to use a nodeback, the result will be sent there.  If they do not\n * pass a nodeback, they will receive the result promise.\n * @param object a result (or a promise for a result)\n * @param {Function} nodeback a Node.js-style callback\n * @returns either the promise or nothing\n */\nQ.nodeify = nodeify;\nfunction nodeify(object, nodeback) {\n    return Q(object).nodeify(nodeback);\n}\n\nPromise.prototype.nodeify = function (nodeback) {\n    if (nodeback) {\n        this.then(function (value) {\n            Q.nextTick(function () {\n                nodeback(null, value);\n            });\n        }, function (error) {\n            Q.nextTick(function () {\n                nodeback(error);\n            });\n        });\n    } else {\n        return this;\n    }\n};\n\nQ.noConflict = function() {\n    throw new Error(\"Q.noConflict only works when Q is used as a global\");\n};\n\n// All code before this point will be filtered from stack traces.\nvar qEndingLine = captureLine();\n\nreturn Q;\n\n});\n","import { is } from \"./is.js\";\r\nimport { global } from \"./global.js\";\r\nimport { activateCamera } from \"./activateCamera.js\";\r\nimport { importScene, ImportPromise } from \"./import.js\";\r\nimport { patch } from \"./patch/patch.js\";\r\nimport \"../node_modules/q/q.js\";\r\n\r\ndeclare var Q;\r\n\r\nlet isReady = true;\r\nlet callbacks = [];\r\n\r\nexport interface IRuntimeLoading {\r\n  container?: string | HTMLCanvasElement;\r\n  assets?: string;\r\n  scene: Function | string;\r\n  activeCamera?: Function | string | any;\r\n  patch?: Array<any>;\r\n  beforeFirstRender?: Function;\r\n  ktx?: boolean | Array<string>;\r\n  enableOfflineSupport?: boolean;\r\n  progressLoading: Function;\r\n  loadingScreen: any;\r\n}\r\n\r\nexport function launch(obj: IRuntimeLoading | string) {\r\n  isReady = false;\r\n  if (is.String(obj)) {\r\n    return importScene(obj).ready(function() {\r\n      run(<IRuntimeLoading> obj);\r\n    });\r\n  }\r\n  obj = <IRuntimeLoading> obj;\r\n  if (obj.container) {\r\n    global.canvas = obj.container;\r\n  }\r\n\r\n  if (obj.ktx) {\r\n    if (is.Array(obj.ktx)) {\r\n      global.engine.setTextureFormatToUse(<string[]> obj.ktx);\r\n    }\r\n    else {\r\n      if (obj.ktx === true) {\r\n        global.engine.setTextureFormatToUse(['-astc.ktx', '-dxt.ktx', '-pvrtc.ktx', '-etc2.ktx']);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (obj.enableOfflineSupport) {\r\n    global.engine.enableOfflineSupport = obj.enableOfflineSupport;\r\n  }\r\n  else {\r\n    global.engine.enableOfflineSupport = false;\r\n  }\r\n\r\n  if (obj.loadingScreen) {\r\n    global.engine.loadingScreen = obj.loadingScreen;\r\n  }\r\n\r\n  if (obj.scene) {\r\n    if (is.String(obj.scene)) {\r\n      // scene is a filename\r\n      if (obj.assets) {\r\n        return importScene(obj.assets, <string> obj.scene).ready(function() {\r\n          run(<IRuntimeLoading> obj);\r\n        });\r\n      }\r\n      else {\r\n        return importScene(<string> obj.scene).ready(function(res) {\r\n          run(<IRuntimeLoading> obj);\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      if (is.Function(obj.scene)) {\r\n        let result = eval(\"var canvas=_r.canvas; var engine = _r.engine; var scene=_r.scene; var createScene=\" + obj.scene + ';createScene()');\r\n        if (is.Scene(result)) {\r\n          global.scene = result;\r\n        }\r\n      }\r\n      else {\r\n        if (is.Scene(obj.scene)) {\r\n          global.scene = obj.scene;\r\n        }\r\n        else {\r\n          throw new Error(\"invalid scene parameter in _r.launch\");\r\n        }\r\n      }\r\n\r\n      run(obj);\r\n      return new ImportPromise(global.scene);\r\n    }\r\n  }\r\n}\r\n\r\nfunction run(obj: IRuntimeLoading) {\r\n  if (obj.activeCamera) {\r\n    if (is.String(obj.activeCamera)) {\r\n      activateCamera(<string> obj.activeCamera);\r\n    }\r\n    else {\r\n      if (is.Function(obj.activeCamera)) {\r\n        try {\r\n          let camera = (<Function> obj.activeCamera).call(global.scene);\r\n          activateCamera(camera.name);\r\n        }\r\n        catch (ex) {\r\n          console.error(\"_r.launch() error on activeCamera\", ex);\r\n        }\r\n      }\r\n      else {\r\n        activateCamera(obj.activeCamera.name);\r\n      }\r\n    }\r\n  }\r\n  if (!global.scene.activeCamera && global.scene.cameras.length > 0) {\r\n    activateCamera(global.scene.cameras[0].name);\r\n  }\r\n\r\n  window.addEventListener('resize', function() {\r\n    global.engine.resize();\r\n  });\r\n\r\n  if (obj.patch) {\r\n    patch(obj.patch).then(function() {\r\n      if (obj.beforeFirstRender && is.Function(obj.beforeFirstRender)) {\r\n        obj.beforeFirstRender();\r\n      }\r\n\r\n      start();\r\n\r\n      isReady = true;\r\n      callbacks.forEach(function(callback) {\r\n        callback.call(global.scene);\r\n      });\r\n      callbacks.length = 0;\r\n    });\r\n  }\r\n  else {\r\n    if (obj.beforeFirstRender && is.Function(obj.beforeFirstRender)) {\r\n      obj.beforeFirstRender();\r\n    }\r\n\r\n    start();\r\n\r\n    isReady = true;\r\n    callbacks.forEach(function(callback) {\r\n      callback.call(global.scene);\r\n    });\r\n    callbacks.length = 0;\r\n  }\r\n}\r\n\r\nfunction loop() {\r\n  global.scene.render();\r\n}\r\n\r\nexport function start() {\r\n  global.engine.runRenderLoop(loop);\r\n}\r\n\r\nexport function pause() {\r\n  global.engine.stopRenderLoop(loop);\r\n}\r\n\r\nexport function ready(callback: Function) {\r\n  if (isReady) {\r\n    callback.call(global.scene);\r\n  }\r\n  else {\r\n    callbacks.push(callback);\r\n  }\r\n}","import { global } from \"./global.js\";\r\nimport { is } from \"./is.js\";\r\nimport { launch, ready, start, pause } from \"./launch.js\";\r\nimport { importScene, downloadScene } from \"./import.js\";\r\nimport { createLibrary, library, libraries } from \"./library.js\";\r\nimport { select } from \"./select.js\";\r\nimport { data } from \"./data.js\";\r\nimport { on, off, one, trigger } from \"./events.js\";\r\nimport { patch } from \"./patch/patch.js\";\r\nimport { match } from \"./Elements.js\";\r\nimport { Selector } from \"./Selector.js\";\r\n\r\nexport default {\r\n    get canvas() {\r\n        return global.canvas;\r\n    },\r\n    set canvas(value) {\r\n        global.canvas = value;\r\n    },\r\n    get scene() {\r\n        return global.scene;\r\n    },\r\n    set scene(value) {\r\n        global.scene = value;\r\n    },\r\n    get engine() {\r\n        return global.engine;\r\n    },\r\n    set engine(value) {\r\n        global.engine = value;\r\n    },\r\n    get TRACE() {\r\n        return global.TRACE;\r\n    },\r\n    set TRACE(value) {\r\n        global.TRACE = value;\r\n    },\r\n    launch : launch,\r\n    ready : ready,\r\n    start : start,\r\n    pause : pause,\r\n    import : importScene,\r\n    download : downloadScene,\r\n    createLibrary : createLibrary,\r\n    library : library,\r\n    data : data,\r\n    on : on,\r\n    off : off,\r\n    one : one,\r\n    trigger : trigger,\r\n    select : select,\r\n    patch : patch,\r\n    match : match,\r\n    Selector : Selector\r\n};\r\n"],"names":["is","_scene","_engine","_canvas","Number","n","isNaN","parseFloat","isFinite","HexColor","x","String","functionToCheck","toString","call","Object","getPrototypeOf","prototype","proto","BABYLON.AssetContainer","BABYLON.Scene","window","isArray","BABYLON.AbstractMesh","BABYLON.Material","BABYLON.MultiMaterial","BABYLON.Texture","BABYLON.Light","BABYLON.Camera","BABYLON.Vector3","Array","length","BABYLON.Vector2","BABYLON.Color3","BABYLON.Color4","trim","indexOf","BABYLON.Quaternion","BABYLON.Matrix","expr","split","extension","Camera","Light","Material","Mesh","Texture","HTMLElement","nodeType","nodeName","global","BABYLON.Engine","LastCreatedEngine","canvas","getRenderingCanvas","document","createElement","setAttribute","style","width","height","body","appendChild","value","getElementById","addEventListener","resize","LastCreatedScene","engine","activateCamera","camera","scene","activeCamera","detachControl","setActiveCameraByName","attachControl","TRACE","console","groupCollapsed","name","log","groupEnd","cache","expando","Date","now","data","element","key","hasOwnProperty","on","event","handler","repeat","events","push","one","trigger","extraParameters","handlers","forEach","callback","off","ex","error","filter","_handler","splice","meshTriggers","onMesh","mesh","actionManager","BABYLON.ActionManager","action","BABYLON.ExecuteCodeAction","evt","registerAction","oneMesh","offMesh","_event","index","actions","listener","removeEventListener","selector","this","filters","type","item","replace","match","regExpAttribute","matches","exec","exp","regExp","RegExp","test","Selector","i","MultiMaterial","_i","elements","add","Elements","AssetContainer","Scene","meshes","lights","materials","textures","cameras","toArray","each","addMesh","addMaterial","addTexture","addCamera","removeMesh","removeMaterial","removeTexture","removeCamera","func","result","attribute","property","base","find","dispose","addMultiMaterial","addLight","removeMultiMaterial","removeLight","params","_selector","matchType","matchFilters","container","material","light","texture","libraries","createLibrary","_elements","library","promise","then","_this","_isReady","_readyCallbacks","catch","_error","_exception","_errorCallbacks","_result","ImportPromise","progress","_progressCallbacks","importScene","any","load","ready","assetContainer","addAllToScene","downloadScene","rootUrl","sceneFileName","url","pop","BABYLON.SceneLoader","loggingLevel","DETAILED_LOGGING","LoadAssetContainerAsync","e","importPromise","triggerProgress","NO_LOGGING","select","arg","toLowerCase","elements_1","lib","contains","warn","patch","args","promises","getOwnPropertyNames","applyPatch","reduce","Q","when","properties","resolveProperty","source","Primitive","Function","res","Promise","definition","bootstrap","exports","module","define","amd","ses","ok","makeQ","self","Error","previousQ","noConflict","hasStacks","stack","qFileName","qStartingLine","captureLine","noop","nextTick","head","task","next","tail","flushing","requestTick","isNodeJS","laterQueue","flush","domain","enter","runSingle","exit","setTimeout","process","setImmediate","bind","MessageChannel","channel","port1","onmessage","requestPortTick","port2","postMessage","runAfter","uncurryThis","f","apply","arguments","QReturnValue","array_slice","slice","array_reduce","basis","TypeError","array_indexOf","array_map","map","thisp","collect","undefined","object_create","create","Type","object_defineProperty","defineProperty","obj","prop","descriptor","object_hasOwnProperty","object_keys","keys","object","object_toString","ReturnValue","STACK_JUMP_SEPARATOR","makeStackTraceLong","stacks","p","__minimumStackCounter__","stackCounter","configurable","unshift","stackString","lines","desiredLines","line","isInternalFrame","stackLine","join","filterStackString","getFileNameAndLineNumber","attempt1","attempt2","attempt3","fileNameAndLineNumber","fileName","lineNumber","qEndingLine","isPromiseAlike","deferred","defer","resolve","reject","notify","exception","fulfill","longStackSupport","longStackCounter","resolvedPromise","messages","progressListeners","promiseDispatch","op","operands","valueOf","nearerValue","nearer","isPromise","inspect","state","substring","become","newPromise","message","reason","progressListener","resolver","race","answerPs","len","fallback","inspected","fulfilled","rejected","progressed","env","Q_DEBUG","makeNodeResolver","all","passByCopy","y","that","spread","makePromise","done","_fulfilled","newException","_rejected","newValue","threw","onerror","tap","fcall","thenResolve","thenReject","isPending","isFulfilled","isRejected","alternative","unhandledReasons","unhandledRejections","reportedUnhandledRejections","trackUnhandledRejections","resetUnhandledRejections","rejection","at","emit","atReport","untrackRejection","get","set","rhs","delete","post","dispatch","pendingCount","snapshot","prev","current","err","allResolved","getUnhandledReasons","stopUnhandledRejectionTracking","master","isDef","array","async","makeGenerator","continuer","verb","StopIteration","generator","errback","spawn","promised","del","mapply","send","mcall","invoke","fapply","fbind","concat","allSettled","regardless","fail","fin","onUnhandledError","timeout","ms","timeoutId","code","clearTimeout","delay","nfapply","nodeArgs","nfcall","nfbind","denodeify","baseArgs","nbind","nmapply","npost","nsend","nmcall","ninvoke","nodeify","nodeback","isReady","callbacks","launch","run","ktx","setTextureFormatToUse","enableOfflineSupport","loadingScreen","assets","eval","beforeFirstRender","start","loop","render","runRenderLoop","pause","stopRenderLoop","import","download"],"mappings":"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"}